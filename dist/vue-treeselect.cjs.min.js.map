{"version":3,"sources":["webpack://VueTreeselect/webpack/bootstrap","webpack://VueTreeselect/external \"@babel/runtime/helpers/defineProperty\"","webpack://VueTreeselect/external \"babel-helper-vue-jsx-merge-props\"","webpack://VueTreeselect/external \"@babel/runtime/helpers/toConsumableArray\"","webpack://VueTreeselect/external \"lodash/noop\"","webpack://VueTreeselect/external \"lodash/debounce\"","webpack://VueTreeselect/external \"is-promise\"","webpack://VueTreeselect/external \"lodash/once\"","webpack://VueTreeselect/external \"lodash/identity\"","webpack://VueTreeselect/external \"lodash/constant\"","webpack://VueTreeselect/external \"lodash/last\"","webpack://VueTreeselect/external \"@babel/runtime/helpers/slicedToArray\"","webpack://VueTreeselect/external \"fuzzysearch\"","webpack://VueTreeselect/external \"watch-size\"","webpack://VueTreeselect/external \"@babel/runtime/helpers/typeof\"","webpack://VueTreeselect/external \"vue\"","webpack://VueTreeselect/./src/utils/warning.js","webpack://VueTreeselect/./src/utils/onLeftClick.js","webpack://VueTreeselect/./src/utils/scrollIntoView.js","webpack://VueTreeselect/./src/utils/watchSize.js","webpack://VueTreeselect/./src/utils/removeFromArray.js","webpack://VueTreeselect/./src/utils/setupResizeAndScrollEventListeners.js","webpack://VueTreeselect/./src/utils/isNaN.js","webpack://VueTreeselect/./src/utils/createMap.js","webpack://VueTreeselect/./src/utils/deepExtend.js","webpack://VueTreeselect/./src/utils/includes.js","webpack://VueTreeselect/./src/utils/find.js","webpack://VueTreeselect/./src/utils/quickDiff.js","webpack://VueTreeselect/./src/constants.js","webpack://VueTreeselect/./src/mixins/treeselectMixin.js","webpack://VueTreeselect/src/components/HiddenFields.vue","webpack://VueTreeselect/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://VueTreeselect/./src/components/HiddenFields.vue","webpack://VueTreeselect/src/components/Input.vue","webpack://VueTreeselect/./src/components/Input.vue","webpack://VueTreeselect/./src/components/Placeholder.vue","webpack://VueTreeselect/src/components/Placeholder.vue","webpack://VueTreeselect/./src/components/SingleValue.vue","webpack://VueTreeselect/src/components/SingleValue.vue","webpack://VueTreeselect/./src/components/icons/Delete.vue?9af8","webpack://VueTreeselect/src/components/icons/Delete.vue","webpack://VueTreeselect/./src/components/icons/Delete.vue","webpack://VueTreeselect/./src/components/MultiValueItem.vue","webpack://VueTreeselect/src/components/MultiValueItem.vue","webpack://VueTreeselect/./src/components/MultiValue.vue","webpack://VueTreeselect/src/components/MultiValue.vue","webpack://VueTreeselect/./src/components/icons/Arrow.vue?a3ef","webpack://VueTreeselect/src/components/icons/Arrow.vue","webpack://VueTreeselect/./src/components/icons/Arrow.vue","webpack://VueTreeselect/src/components/Option.vue","webpack://VueTreeselect/./src/components/Control.vue","webpack://VueTreeselect/src/components/Control.vue","webpack://VueTreeselect/./src/components/Tip.vue","webpack://VueTreeselect/src/components/Tip.vue","webpack://VueTreeselect/./src/components/Option.vue","webpack://VueTreeselect/src/components/Menu.vue","webpack://VueTreeselect/./src/components/Menu.vue","webpack://VueTreeselect/src/components/MenuPortal.vue","webpack://VueTreeselect/./src/components/MenuPortal.vue","webpack://VueTreeselect/./src/components/Treeselect.vue","webpack://VueTreeselect/src/components/Treeselect.vue","webpack://VueTreeselect/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","warning","noop","onLeftClick","mouseDownHandler","evt","type","button","_len","arguments","length","args","Array","_key","apply","this","concat","scrollIntoView","$scrollingEl","$focusedEl","scrollingReact","getBoundingClientRect","focusedRect","overScroll","offsetHeight","bottom","scrollTop","Math","min","offsetTop","clientHeight","scrollHeight","top","max","intervalId","removeFromArray","arr","elem","idx","indexOf","splice","registered","test","item","$el","listener","lastWidth","lastHeight","width","offsetWidth","height","watchSizeForIE9","push","setInterval","forEach","clearInterval","watchSize","isIE9","document","documentMode","locked","removeSizeWatcher","watchSizeForBrowsersOtherThanIE9","isScrollElment","_getComputedStyle","getComputedStyle","overflow","overflowX","overflowY","setupResizeAndScrollEventListeners","$scrollParents","$parent","parentNode","nodeName","nodeType","ELEMENT_NODE","window","findScrollParents","addEventListener","passive","scrollParent","removeEventListener","$scrollParent","isNaN","x","createMap","isPlainObject","_typeof","getPrototypeOf","deepExtend","target","source","keys","len","obj","includes","arrOrStr","find","predicate","ctx","quickDiff","arrA","arrB","LOAD_ROOT_OPTIONS","LOAD_CHILDREN_OPTIONS","ASYNC_SEARCH","KEY_CODES","sortValueByIndex","a","b","level","index","match","enableFuzzyMatch","needle","haystack","fuzzysearch","getErrorMessage","err","message","String","instanceId","provide","instance","props","allowClearingDisabled","Boolean","default","allowSelectingDisabledDescendants","alwaysOpen","appendToBody","async","autoFocus","autoLoadRootOptions","autoDeselectAncestors","autoDeselectDescendants","autoSelectAncestors","autoSelectDescendants","backspaceRemoves","beforeClearAll","Function","constant","branchNodesFirst","cacheOptions","clearable","clearAllText","clearOnSelect","clearValueText","closeOnSelect","defaultExpandLevel","Number","defaultOptions","deleteRemoves","delimiter","flattenSearchResults","disableBranchNodes","disabled","disableFuzzyMatching","flat","joinValues","limit","Infinity","limitText","count","loadingText","loadOptions","matchKeys","maxHeight","multiple","noChildrenText","noOptionsText","noResultsText","normalizer","identity","openDirection","validator","openOnClick","openOnFocus","options","placeholder","required","retryText","retryTitle","searchable","searchNested","searchPromptText","showCount","showCountOf","showCountOnSearch","sortValueBy","tabIndex","valueConsistsOf","valueFormat","zIndex","data","trigger","isFocused","searchQuery","menu","isOpen","current","lastScrollPosition","placement","forest","normalizedOptions","nodeMap","checkedStateMap","selectedNodeIds","extractCheckedNodeIdsFromValue","selectedNodeMap","rootOptionsStates","isLoaded","isLoading","loadingError","localSearch","active","noResults","countMap","remoteSearch","computed","selectedNodes","map","getNode","internalValue","_this","single","slice","filter","id","node","isRootNode","isSelected","isLeaf","children","_internalValue","indeterminateNodeIds","selectedNode","ancestors","ancestor","sort","sortValueByLevel","hasValue","visibleOptionIds","_this2","traverseAllNodesByIndex","shouldOptionBeIncludedInSearchResult","isBranch","shouldExpand","hasVisibleOptions","showCountOnSearchComputed","hasBranchNodes","some","rootNode","shouldFlattenOptions","watch","newValue","openMenu","closeMenu","initialize","oldValue","$emit","getValue","getInstanceId","buildForestState","handler","isArray","deep","immediate","handleRemoteSearch","handleLocalSearch","nodeIdsFromValue","fixSelectedNodeIds","methods","verifyProps","_this3","propName","resetFlags","_blurOnSelect","getRemoteSearchEntry","prevNodeMap","keepDataOfSelectedNodes","normalize","_this4","rawNodes","raw","nodeId","createFallbackNode","extractNodeFromValue","fallbackNode","label","enhancedNormalizer","isFallbackNode","isDisabled","isNew","$set","_this5","_this6","defaultNode","nodeIdListOfPrevValue","_this7","nextSelectedNodeIds","traverseDescendantsBFS","descendant","queue","shift","_this8","_objectSpread","callback","currNode","_toConsumableArray","traverseDescendantsDFS","_this9","child","traverseAllNodesDFS","_this10","walk","toggleClickOutsideEvent","enabled","handleClickOutside","getValueContainer","$refs","control","getInput","input","focusInput","focus","blurInput","blur","handleMouseDown","preventDefault","stopPropagation","contains","wrapper","_this11","done","resetHighlightedOptionWhenNecessary","isExpandedOnSearch","showAllChildrenOnSearch","isMatched","hasMatchedDescendants","_defineProperty","lowerCasedSearchQuery","trim","toLocaleLowerCase","splitSearchQuery","replace","split","every","filterValue","nestedSearchLabel","matchKey","lowerCased","_this12","entry","callLoadOptionsProp","action","isPending","start","succeed","fail","end","isExpanded","shouldShowOptionInMenu","getControl","getMenu","$menu","portal","portalTarget","setCurrentHighlightedOption","_this13","scroll","undefined","prev","isHighlighted","scrollToOption","$option","querySelector","$nextTick","forceReset","highlightFirstOption","first","highlightPrevOption","highlightLastOption","highlightNextOption","next","last","getLast","resetSearchQuery","saveMenuScrollPosition","restoreMenuScrollPosition","loadRootOptions","toggleMenu","toggleExpanded","nextState","childrenStates","loadChildrenOptions","_this14","selectedNodeId","ancestorNode","nodes","_this15","_ref","_ref2","_slicedToArray","checkDuplication","verifyNodeShape","isDefaultExpanded","reduce","normalized","hasDisabledDescendants","branchNodes","option","leafNodes","_this16","_this17","_ref3","once","result","isPromise","then","catch","console","error","_this18","JSON","stringify","select","clear","_selectNode","_deselectNode","_this19","_this20","addValue","isFullyChecked","curr","_this21","removeValue","hasUncheckedSomeDescendants","removeLastValue","lastValue","lastSelectedNode","created","mounted","destroyed","stringifyValue","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","inject","_","injections","stringifiedValues","join","stringifiedValue","attrs","domProps","keysThatRequireMenuBeingOpen","inputWidth","needAutoSize","inputStyle","updateInputWidth","debouncedCallback","debounce","updateSearchQuery","leading","trailing","onInput","onFocus","onBlur","activeElement","cancel","onKeyDown","which","keyCode","ctrlKey","shiftKey","altKey","metaKey","onMouseDown","renderInputContainer","$createElement","renderInput","renderSizer","on","keydown","ref","_mergeJSXProps","autocomplete","style","sizer","scrollWidth","placeholderClass","renderSingleValueLabel","customValueLabelRenderer","$scopedSlots","renderValueContainer","shouldShowValue","Placeholder","Input","_c","_self","xmlns","viewBox","_withStripped","__file","itemClass","labelRenderer","DeleteIcon","renderMultiValueItems","MultiValueItem","renderExceedLimitTip","transitionGroupProps","tag","appear","arrowPlaceholder","checkMark","minusMark","shouldShowX","hasUndisabledValue","shouldShowArrow","renderX","title","handleMouseDownOnX","renderArrow","arrowClass","handleMouseDownOnArrow","ArrowIcon","shouldClear","setTimeout","ValueContainer","SingleValue","MultiValue","icon","Option","shouldShow","renderOption","handleMouseEnterOption","renderLabelContainer","renderCheckboxContainer","renderCheckbox","renderLabel","renderSubOptionsList","renderSubOptions","renderNoChildrenTip","renderLoadingChildrenTip","renderLoadingChildrenErrorTip","handleMouseDownOnLabelContainer","checkedState","checkboxClass","shouldShowCount","NaN","customLabelRenderer","labelClassName","countClassName","childNode","Tip","handleMouseDownOnRetry","currentTarget","indentLevel","listItemClass","transitionProps","directionMap","above","below","menuStyle","menuContainerStyle","onMenuOpen","onMenuClose","menuSizeWatcher","menuResizeAndScrollEventListeners","renderMenu","renderBeforeList","renderAsyncSearchMenuInner","renderLocalSearchMenuInner","renderNormalMenuInner","renderAfterList","beforeListRenderer","afterListRenderer","renderLoadingOptionsTip","renderLoadingRootOptionsErrorTip","renderNoAvailableOptionsTip","renderOptionList","renderNoResultsTip","shouldShowSearchPromptTip","shouldShowNoResultsTip","renderSearchPromptTip","renderAsyncSearchLoadingErrorTip","adjustMenuOpenDirection","setupMenuSizeWatcher","setupMenuResizeAndScrollEventListeners","removeMenuSizeWatcher","removeMenuResizeAndScrollEventListeners","$control","menuRect","controlRect","menuHeight","viewportHeight","innerHeight","spaceAbove","hasEnoughSpaceBelow","hasEnoughSpaceAbove","remove","PortalTarget","setupHandlers","removeHandlers","updateMenuContainerOffset","controlResizeAndScrollEventListeners","controlSizeWatcher","updateWidth","setupControlResizeAndScrollEventListeners","setupControlSizeWatcher","removeControlResizeAndScrollEventListeners","removeControlSizeWatcher","$portalTarget","portalTargetRect","offsetY","left","round","body","portalTargetClass","wrapperClass","portalTargetStyle","Menu","setup","teardown","el","createElement","appendChild","Vue","removeChild","innerHTML","$destroy","mixins","treeselectMixin","HiddenFields","Control","MenuPortal","VERSION","Treeselect","PKG_VERSION"],"mappings":"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","file":"vue-treeselect.cjs.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"babel-helper-vue-jsx-merge-props\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"lodash/noop\");","module.exports = require(\"lodash/debounce\");","module.exports = require(\"is-promise\");","module.exports = require(\"lodash/once\");","module.exports = require(\"lodash/identity\");","module.exports = require(\"lodash/constant\");","module.exports = require(\"lodash/last\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"fuzzysearch\");","module.exports = require(\"watch-size\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"vue\");","import { noop } from './noop'\n\nexport const warning = process.env.NODE_ENV === 'production'\n  ? /* istanbul ignore next */ noop\n  : function warning(checker, complainer) {\n    if (!checker()) {\n      const message = [ '[Vue-Treeselect Warning]' ].concat(complainer())\n      // eslint-disable-next-line no-console\n      console.error(...message)\n    }\n  }\n","export function onLeftClick(mouseDownHandler) {\n  return function onMouseDown(evt, ...args) {\n    if (evt.type === 'mousedown' && evt.button === 0) {\n      mouseDownHandler.call(this, evt, ...args)\n    }\n  }\n}\n","// from react-select\nexport function scrollIntoView($scrollingEl, $focusedEl) {\n  const scrollingReact = $scrollingEl.getBoundingClientRect()\n  const focusedRect = $focusedEl.getBoundingClientRect()\n  const overScroll = $focusedEl.offsetHeight / 3\n\n  if (focusedRect.bottom + overScroll > scrollingReact.bottom) {\n    $scrollingEl.scrollTop = Math.min(\n      $focusedEl.offsetTop + $focusedEl.clientHeight - $scrollingEl.offsetHeight + overScroll,\n      $scrollingEl.scrollHeight,\n    )\n  } else if (focusedRect.top - overScroll < scrollingReact.top) {\n    $scrollingEl.scrollTop = Math.max($focusedEl.offsetTop - overScroll, 0)\n  }\n}\n","import watchSizeForBrowsersOtherThanIE9 from 'watch-size'\nimport { removeFromArray } from './removeFromArray'\n\nlet intervalId\nconst registered = []\nconst INTERVAL_DURATION = 100\n\nfunction run() {\n  intervalId = setInterval(() => {\n    registered.forEach(test)\n  }, INTERVAL_DURATION)\n}\n\nfunction stop() {\n  clearInterval(intervalId)\n  intervalId = null\n}\n\nfunction test(item) {\n  const { $el, listener, lastWidth, lastHeight } = item\n  const width = $el.offsetWidth\n  const height = $el.offsetHeight\n\n  if (lastWidth !== width || lastHeight !== height) {\n    item.lastWidth = width\n    item.lastHeight = height\n\n    listener({ width, height })\n  }\n}\n\nfunction watchSizeForIE9($el, listener) {\n  const item = {\n    $el,\n    listener,\n    lastWidth: null,\n    lastHeight: null,\n  }\n  const unwatch = () => {\n    removeFromArray(registered, item)\n    if (!registered.length) stop()\n  }\n\n  registered.push(item)\n  // The original watch-size will call the listener on initialization.\n  // Keep the same behavior here.\n  test(item)\n  run()\n\n  return unwatch\n}\n\nexport function watchSize($el, listener) {\n  // See: https://stackoverflow.com/a/31293352\n  const isIE9 = document.documentMode === 9\n  // watch-size will call the listener on initialization.\n  // Disable this behavior with a lock to achieve a clearer code logic.\n  let locked = true\n  const wrappedListener = (...args) => locked || listener(...args)\n  const implementation = isIE9\n    ? watchSizeForIE9\n    : watchSizeForBrowsersOtherThanIE9\n  const removeSizeWatcher = implementation($el, wrappedListener)\n  locked = false // unlock after initialization\n\n  return removeSizeWatcher\n}\n","export function removeFromArray(arr, elem) {\n  const idx = arr.indexOf(elem)\n  if (idx !== -1) arr.splice(idx, 1)\n}\n","function findScrollParents($el) {\n  const $scrollParents = []\n  let $parent = $el.parentNode\n\n  while ($parent && $parent.nodeName !== 'BODY' && $parent.nodeType === document.ELEMENT_NODE) {\n    if (isScrollElment($parent)) $scrollParents.push($parent)\n    $parent = $parent.parentNode\n  }\n  $scrollParents.push(window)\n\n  return $scrollParents\n}\n\nfunction isScrollElment($el) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getComputedStyle($el)\n  return /(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)\n}\n\nexport function setupResizeAndScrollEventListeners($el, listener) {\n  const $scrollParents = findScrollParents($el)\n\n  window.addEventListener('resize', listener, { passive: true })\n  $scrollParents.forEach(scrollParent => {\n    scrollParent.addEventListener('scroll', listener, { passive: true })\n  })\n\n  return function removeEventListeners() {\n    window.removeEventListener('resize', listener, { passive: true })\n    $scrollParents.forEach($scrollParent => {\n      $scrollParent.removeEventListener('scroll', listener, { passive: true })\n    })\n  }\n}\n","export function isNaN(x) {\n  return x !== x\n}\n","export const createMap = () => Object.create(null)\n","function isPlainObject(value) {\n  if (value == null || typeof value !== 'object') return false\n  return Object.getPrototypeOf(value) === Object.prototype\n}\n\nfunction copy(obj, key, value) {\n  if (isPlainObject(value)) {\n    obj[key] || (obj[key] = {})\n    deepExtend(obj[key], value)\n  } else {\n    obj[key] = value\n  }\n}\n\nexport function deepExtend(target, source) {\n  if (isPlainObject(source)) {\n    const keys = Object.keys(source)\n\n    for (let i = 0, len = keys.length; i < len; i++) {\n      copy(target, keys[i], source[keys[i]])\n    }\n  }\n\n  return target\n}\n","export function includes(arrOrStr, elem) {\n  return arrOrStr.indexOf(elem) !== -1\n}\n","export function find(arr, predicate, ctx) {\n  for (let i = 0, len = arr.length; i < len; i++) {\n    if (predicate.call(ctx, arr[i], i, arr)) return arr[i]\n  }\n  return undefined\n}\n","export function quickDiff(arrA, arrB) {\n  if (arrA.length !== arrB.length) return true\n\n  for (let i = 0; i < arrA.length; i++) {\n    if (arrA[i] !== arrB[i]) return true\n  }\n\n  return false\n}\n","// Magic value that indicates a root level node.\nexport const NO_PARENT_NODE = null\n\n// Types of checked state.\nexport const UNCHECKED = 0\nexport const INDETERMINATE = 1\nexport const CHECKED = 2\n\n// Types of count number.\nexport const ALL_CHILDREN = 'ALL_CHILDREN'\nexport const ALL_DESCENDANTS = 'ALL_DESCENDANTS'\nexport const LEAF_CHILDREN = 'LEAF_CHILDREN'\nexport const LEAF_DESCENDANTS = 'LEAF_DESCENDANTS'\n\n// Action types of delayed loading.\nexport const LOAD_ROOT_OPTIONS = 'LOAD_ROOT_OPTIONS'\nexport const LOAD_CHILDREN_OPTIONS = 'LOAD_CHILDREN_OPTIONS'\nexport const ASYNC_SEARCH = 'ASYNC_SEARCH'\n\n// Acceptable values of `valueConsistsOf` prop.\nexport const ALL = 'ALL'\nexport const BRANCH_PRIORITY = 'BRANCH_PRIORITY'\nexport const LEAF_PRIORITY = 'LEAF_PRIORITY'\nexport const ALL_WITH_INDETERMINATE = 'ALL_WITH_INDETERMINATE'\n\n// Acceptable values of `sortValueBy` prop.\nexport const ORDER_SELECTED = 'ORDER_SELECTED'\nexport const LEVEL = 'LEVEL'\nexport const INDEX = 'INDEX'\n\n// Key codes look-up table.\nexport const KEY_CODES = {\n  BACKSPACE: 8,\n  ENTER: 13,\n  ESCAPE: 27,\n  END: 35,\n  HOME: 36,\n  ARROW_LEFT: 37,\n  ARROW_UP: 38,\n  ARROW_RIGHT: 39,\n  ARROW_DOWN: 40,\n  DELETE: 46,\n}\n\n// Other constants.\nexport const INPUT_DEBOUNCE_DELAY = process.env.NODE_ENV === 'testing'\n  ? /* to speed up unit testing */ 10\n  : /* istanbul ignore next */ 200\nexport const MIN_INPUT_WIDTH = 5\nexport const MENU_BUFFER = 40\n","import fuzzysearch from 'fuzzysearch'\n\nimport {\n  warning,\n  onLeftClick, scrollIntoView,\n  isNaN, isPromise, once,\n  identity, constant, createMap,\n  quickDiff, last as getLast, includes, find, removeFromArray,\n} from '../utils'\n\nimport {\n  NO_PARENT_NODE,\n  UNCHECKED, INDETERMINATE, CHECKED,\n  LOAD_ROOT_OPTIONS, LOAD_CHILDREN_OPTIONS, ASYNC_SEARCH,\n  ALL, BRANCH_PRIORITY, LEAF_PRIORITY, ALL_WITH_INDETERMINATE,\n  ALL_CHILDREN, ALL_DESCENDANTS, LEAF_CHILDREN, LEAF_DESCENDANTS,\n  ORDER_SELECTED, LEVEL, INDEX,\n} from '../constants'\n\nfunction sortValueByIndex(a, b) {\n  let i = 0\n  do {\n    if (a.level < i) return -1\n    if (b.level < i) return 1\n    if (a.index[i] !== b.index[i]) return a.index[i] - b.index[i]\n    i++\n  } while (true)\n}\n\nfunction sortValueByLevel(a, b) {\n  return a.level === b.level\n    ? sortValueByIndex(a, b)\n    : a.level - b.level\n}\n\nfunction createAsyncOptionsStates() {\n  return {\n    isLoaded: false,\n    isLoading: false,\n    loadingError: '',\n  }\n}\n\nfunction stringifyOptionPropValue(value) {\n  if (typeof value === 'string') return value\n  if (typeof value === 'number' && !isNaN(value)) return value + ''\n  // istanbul ignore next\n  return ''\n}\n\nfunction match(enableFuzzyMatch, needle, haystack) {\n  return enableFuzzyMatch\n    ? fuzzysearch(needle, haystack)\n    : includes(haystack, needle)\n}\n\nfunction getErrorMessage(err) {\n  return err.message || /* istanbul ignore next */String(err)\n}\n\nlet instanceId = 0\n\nexport default {\n  provide() {\n    return {\n      // Enable access to the instance of root component of vue-treeselect\n      // across hierarchy.\n      instance: this,\n    }\n  },\n\n  props: {\n    /**\n     * Whether to allow resetting value even if there are disabled selected nodes.\n     */\n    allowClearingDisabled: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * When an ancestor node is selected/deselected, whether its disabled descendants should be selected/deselected.\n     * You may want to use this in conjunction with `allowClearingDisabled` prop.\n     */\n    allowSelectingDisabledDescendants: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Whether the menu should be always open.\n     */\n    alwaysOpen: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Append the menu to <body />?\n     */\n    appendToBody: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Whether to enable async search mode.\n     */\n    async: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Automatically focus the component on mount?\n     */\n    autoFocus: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Automatically load root options on mount. When set to `false`, root options will be loaded when the menu is opened.\n     */\n    autoLoadRootOptions: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * When user deselects a node, automatically deselect its ancestors. Applies to flat mode only.\n     */\n    autoDeselectAncestors: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * When user deselects a node, automatically deselect its descendants. Applies to flat mode only.\n     */\n    autoDeselectDescendants: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * When user selects a node, automatically select its ancestors. Applies to flat mode only.\n     */\n    autoSelectAncestors: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * When user selects a node, automatically select its descendants. Applies to flat mode only.\n     */\n    autoSelectDescendants: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Whether pressing backspace key removes the last item if there is no text input.\n     */\n    backspaceRemoves: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Function that processes before clearing all input fields.\n     * Return `false` to prevent value from being cleared.\n     * @type {function(): (boolean|Promise<boolean>)}\n     */\n    beforeClearAll: {\n      type: Function,\n      default: constant(true),\n    },\n\n    /**\n     * Show branch nodes before leaf nodes?\n     */\n    branchNodesFirst: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Should cache results of every search request?\n     */\n    cacheOptions: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Show an \"×\" button that resets value?\n     */\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Title for the \"×\" button when `multiple: true`.\n     */\n    clearAllText: {\n      type: String,\n      default: 'Clear all',\n    },\n\n    /**\n     * Whether to clear the search input after selecting.\n     * Use only when `multiple` is `true`.\n     * For single-select mode, it **always** clears the input after selecting an option regardless of the prop value.\n     */\n    clearOnSelect: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Title for the \"×\" button.\n     */\n    clearValueText: {\n      type: String,\n      default: 'Clear value',\n    },\n\n    /**\n     * Whether to close the menu after selecting an option?\n     * Use only when `multiple` is `true`.\n     */\n    closeOnSelect: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * How many levels of branch nodes should be automatically expanded when loaded.\n     * Set `Infinity` to make all branch nodes expanded by default.\n     */\n    defaultExpandLevel: {\n      type: Number,\n      default: 0,\n    },\n\n    /**\n     * The default set of options to show before the user starts searching. Used for async search mode.\n     * When set to `true`, the results for search query as a empty string will be autoloaded.\n     * @type {boolean|node[]}\n     */\n    defaultOptions: {\n      default: false,\n    },\n\n    /**\n     * Whether pressing delete key removes the last item if there is no text input.\n     */\n    deleteRemoves: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Delimiter to use to join multiple values for the hidden field value.\n     */\n    delimiter: {\n      type: String,\n      default: ',',\n    },\n\n    /**\n     * Only show the nodes that match the search value directly, excluding its ancestors.\n     *\n     * @type {Object}\n     */\n    flattenSearchResults: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Prevent branch nodes from being selected?\n     */\n    disableBranchNodes: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Disable the control?\n     */\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Disable the fuzzy matching functionality?\n     */\n    disableFuzzyMatching: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Whether to enable flat mode or not. Non-flat mode (default) means:\n     *   - Whenever a branch node gets checked, all its children will be checked too\n     *   - Whenever a branch node has all children checked, the branch node itself will be checked too\n     * Set `true` to disable this mechanism\n     */\n    flat: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Will be passed with all events as the last param.\n     * Useful for identifying events origin.\n    */\n    instanceId: {\n      // Add two trailing \"$\" to distinguish from explictly specified ids.\n      default: () => `${instanceId++}$$`,\n      type: [ String, Number ],\n    },\n\n    /**\n     * Joins multiple values into a single form field with the `delimiter` (legacy mode).\n    */\n    joinValues: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Limit the display of selected options.\n     * The rest will be hidden within the limitText string.\n     */\n    limit: {\n      type: Number,\n      default: Infinity,\n    },\n\n    /**\n     * Function that processes the message shown when selected elements pass the defined limit.\n     * @type {function(number): string}\n     */\n    limitText: {\n      type: Function,\n      default: function limitTextDefault(count) { // eslint-disable-line func-name-matching\n        return `and ${count} more`\n      },\n    },\n\n    /**\n     * Text displayed when loading options.\n     */\n    loadingText: {\n      type: String,\n      default: 'Loading...',\n    },\n\n    /**\n     * Used for dynamically loading options.\n     * @type {function({action: string, callback: (function((Error|string)=): void), parentNode: node=, instanceId}): void}\n     */\n    loadOptions: {\n      type: Function,\n    },\n\n    /**\n     * Which node properties to filter on.\n     */\n    matchKeys: {\n      type: Array,\n      default: constant([ 'label' ]),\n    },\n\n    /**\n     * Sets `maxHeight` style value of the menu.\n     */\n    maxHeight: {\n      type: Number,\n      default: 300,\n    },\n\n    /**\n     * Set `true` to allow selecting multiple options (a.k.a., multi-select mode).\n     */\n    multiple: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Generates a hidden <input /> tag with this field name for html forms.\n     */\n    name: {\n      type: String,\n    },\n\n    /**\n     * Text displayed when a branch node has no children.\n     */\n    noChildrenText: {\n      type: String,\n      default: 'No sub-options.',\n    },\n\n    /**\n     * Text displayed when there are no available options.\n     */\n    noOptionsText: {\n      type: String,\n      default: 'No options available.',\n    },\n\n    /**\n     * Text displayed when there are no matching search results.\n     */\n    noResultsText: {\n      type: String,\n      default: 'No results found...',\n    },\n\n    /**\n     * Used for normalizing source data.\n     * @type {function(node, instanceId): node}\n     */\n    normalizer: {\n      type: Function,\n      default: identity,\n    },\n\n    /**\n     * By default (`auto`), the menu will open below the control. If there is not\n     * enough space, vue-treeselect will automatically flip the menu.\n     * You can use one of other four options to force the menu to be always opened\n     * to specified direction.\n     * Acceptable values:\n     *   - `\"auto\"`\n     *   - `\"below\"`\n     *   - `\"bottom\"`\n     *   - `\"above\"`\n     *   - `\"top\"`\n     */\n    openDirection: {\n      type: String,\n      default: 'auto',\n      validator(value) {\n        const acceptableValues = [ 'auto', 'top', 'bottom', 'above', 'below' ]\n        return includes(acceptableValues, value)\n      },\n    },\n\n    /**\n     * Whether to automatically open the menu when the control is clicked.\n     */\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Whether to automatically open the menu when the control is focused.\n     */\n    openOnFocus: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Array of available options.\n     * @type {node[]}\n     */\n    options: {\n      type: Array,\n    },\n\n    /**\n     * Field placeholder, displayed when there's no value.\n     */\n    placeholder: {\n      type: String,\n      default: 'Select...',\n    },\n\n    /**\n     * Applies HTML5 required attribute when needed.\n     */\n    required: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Text displayed asking user whether to retry loading children options.\n     */\n    retryText: {\n      type: String,\n      default: 'Retry?',\n    },\n\n    /**\n     * Title for the retry button.\n     */\n    retryTitle: {\n      type: String,\n      default: 'Click to retry',\n    },\n\n    /**\n     * Enable searching feature?\n     */\n    searchable: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Search in ancestor nodes too.\n     */\n    searchNested: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Text tip to prompt for async search.\n     */\n    searchPromptText: {\n      type: String,\n      default: 'Type to search...',\n    },\n\n    /**\n     * Whether to show a children count next to the label of each branch node.\n     */\n    showCount: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Used in conjunction with `showCount` to specify which type of count number should be displayed.\n     * Acceptable values:\n     *   - \"ALL_CHILDREN\"\n     *   - \"ALL_DESCENDANTS\"\n     *   - \"LEAF_CHILDREN\"\n     *   - \"LEAF_DESCENDANTS\"\n     */\n    showCountOf: {\n      type: String,\n      default: ALL_CHILDREN,\n      validator(value) {\n        const acceptableValues = [ ALL_CHILDREN, ALL_DESCENDANTS, LEAF_CHILDREN, LEAF_DESCENDANTS ]\n        return includes(acceptableValues, value)\n      },\n    },\n\n    /**\n     * Whether to show children count when searching.\n     * Fallbacks to the value of `showCount` when not specified.\n     * @type {boolean}\n     */\n    showCountOnSearch: null,\n\n    /**\n     * In which order the selected options should be displayed in trigger & sorted in `value` array.\n     * Used for multi-select mode only.\n     * Acceptable values:\n     *   - \"ORDER_SELECTED\"\n     *   - \"LEVEL\"\n     *   - \"INDEX\"\n     */\n    sortValueBy: {\n      type: String,\n      default: ORDER_SELECTED,\n      validator(value) {\n        const acceptableValues = [ ORDER_SELECTED, LEVEL, INDEX ]\n        return includes(acceptableValues, value)\n      },\n    },\n\n    /**\n     * Tab index of the control.\n     */\n    tabIndex: {\n      type: Number,\n      default: 0,\n    },\n\n    /**\n     * The value of the control.\n     * Should be `id` or `node` object for single-select mode, or an array of `id` or `node` object for multi-select mode.\n     * Its format depends on the `valueFormat` prop.\n     * For most cases, just use `v-model` instead.\n     * @type {?Array}\n     */\n    value: null,\n\n    /**\n     * Which kind of nodes should be included in the `value` array in multi-select mode.\n     * Acceptable values:\n     *   - \"ALL\" - Any node that is checked will be included in the `value` array\n     *   - \"BRANCH_PRIORITY\" (default) - If a branch node is checked, all its descendants will be excluded in the `value` array\n     *   - \"LEAF_PRIORITY\" - If a branch node is checked, this node itself and its branch descendants will be excluded from the `value` array but its leaf descendants will be included\n     *   - \"ALL_WITH_INDETERMINATE\" - Any node that is checked will be included in the `value` array, plus indeterminate nodes\n     */\n    valueConsistsOf: {\n      type: String,\n      default: BRANCH_PRIORITY,\n      validator(value) {\n        const acceptableValues = [ ALL, BRANCH_PRIORITY, LEAF_PRIORITY, ALL_WITH_INDETERMINATE ]\n        return includes(acceptableValues, value)\n      },\n    },\n\n    /**\n     * Format of `value` prop.\n     * Note that, when set to `\"object\"`, only `id` & `label` properties are required in each `node` object in `value` prop.\n     * Acceptable values:\n     *   - \"id\"\n     *   - \"object\"\n     */\n    valueFormat: {\n      type: String,\n      default: 'id',\n    },\n\n    /**\n     * z-index of the menu.\n     */\n    zIndex: {\n      type: [ Number, String ],\n      default: 999,\n    },\n  },\n\n  data() {\n    return {\n      trigger: {\n        // Is the control focused?\n        isFocused: false,\n        // User entered search query - value of the input.\n        searchQuery: '',\n      },\n\n      menu: {\n        // Is the menu opened?\n        isOpen: false,\n        // Id of current highlighted option.\n        current: null,\n        // The scroll position before last menu closing.\n        lastScrollPosition: 0,\n        // Which direction to open the menu.\n        placement: 'bottom',\n      },\n\n      forest: {\n        // Normalized options.\n        normalizedOptions: [],\n        // <id, node> map for quick look-up.\n        nodeMap: createMap(),\n        // <id, checkedState> map, used for multi-select mode.\n        checkedStateMap: createMap(),\n        // Id list of all selected options.\n        selectedNodeIds: this.extractCheckedNodeIdsFromValue(),\n        // <id, true> map for fast checking:\n        //   if (forest.selectedNodeIds.indexOf(id) !== -1) forest.selectedNodeMap[id] === true\n        selectedNodeMap: createMap(),\n      },\n\n      // States of root options.\n      rootOptionsStates: createAsyncOptionsStates(),\n\n      localSearch: {\n        // Has user entered any query to search local options?\n        active: false,\n        // Has any options matched the search query?\n        noResults: true,\n        // <id, countObject> map for counting matched children/descendants.\n        countMap: createMap(),\n      },\n\n      // <searchQuery, remoteSearchEntry> map.\n      remoteSearch: createMap(),\n    }\n  },\n\n  computed: {\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Normalized nodes that have been selected.\n     * @type {node[]}\n     */\n    selectedNodes() {\n      return this.forest.selectedNodeIds.map(this.getNode)\n    },\n    /**\n     * Id list of selected nodes with `sortValueBy` prop applied.\n     * @type {nodeId[]}\n     */\n    internalValue() {\n      let internalValue\n\n      // istanbul ignore else\n      if (this.single || this.flat || this.disableBranchNodes || this.valueConsistsOf === ALL) {\n        internalValue = this.forest.selectedNodeIds.slice()\n      } else if (this.valueConsistsOf === BRANCH_PRIORITY) {\n        internalValue = this.forest.selectedNodeIds.filter(id => {\n          const node = this.getNode(id)\n          if (node.isRootNode) return true\n          return !this.isSelected(node.parentNode)\n        })\n      } else if (this.valueConsistsOf === LEAF_PRIORITY) {\n        internalValue = this.forest.selectedNodeIds.filter(id => {\n          const node = this.getNode(id)\n          if (node.isLeaf) return true\n          return node.children.length === 0\n        })\n      } else if (this.valueConsistsOf === ALL_WITH_INDETERMINATE) {\n        const indeterminateNodeIds = []\n        internalValue = this.forest.selectedNodeIds.slice()\n        this.selectedNodes.forEach(selectedNode => {\n          selectedNode.ancestors.forEach(ancestor => {\n            if (includes(indeterminateNodeIds, ancestor.id)) return\n            if (includes(internalValue, ancestor.id)) return\n            indeterminateNodeIds.push(ancestor.id)\n          })\n        })\n        internalValue.push(...indeterminateNodeIds)\n      }\n\n      if (this.sortValueBy === LEVEL) {\n        internalValue.sort((a, b) => sortValueByLevel(this.getNode(a), this.getNode(b)))\n      } else if (this.sortValueBy === INDEX) {\n        internalValue.sort((a, b) => sortValueByIndex(this.getNode(a), this.getNode(b)))\n      }\n\n      return internalValue\n    },\n    /**\n     * Has any option been selected?\n     * @type {boolean}\n     */\n    hasValue() {\n      return this.internalValue.length > 0\n    },\n    /**\n     * Single-select mode?\n     * @type {boolean}\n     */\n    single() {\n      return !this.multiple\n    },\n    /**\n     * Id list of nodes displayed in the menu. Nodes that are considered NOT visible:\n     *   - descendants of a collapsed branch node\n     *   - in local search mode, nodes that are not matched, unless\n     *       - it's a branch node and has matched descendants\n     *       - it's a leaf node and its parent node is explicitly set to show all children\n     * @type {id[]}\n     */\n    visibleOptionIds() {\n      const visibleOptionIds = []\n\n      this.traverseAllNodesByIndex(node => {\n        if (!this.localSearch.active || this.shouldOptionBeIncludedInSearchResult(node)) {\n          visibleOptionIds.push(node.id)\n        }\n        // Skip the traversal of descendants of a branch node if it's not expanded.\n        if (node.isBranch && !this.shouldExpand(node)) {\n          return false\n        }\n      })\n\n      return visibleOptionIds\n    },\n    /**\n     * Has any option should be displayed in the menu?\n     * @type {boolean}\n     */\n    hasVisibleOptions() {\n      return this.visibleOptionIds.length !== 0\n    },\n    /**\n     * Should show children count when searching?\n     * @type {boolean}\n     */\n    showCountOnSearchComputed() {\n      // Vue doesn't allow setting default prop value based on another prop value.\n      // So use computed property as a workaround.\n      // https://github.com/vuejs/vue/issues/6358\n      return typeof this.showCountOnSearch === 'boolean'\n        ? this.showCountOnSearch\n        : this.showCount\n    },\n    /**\n     * Is there any branch node?\n     * @type {boolean}\n     */\n    hasBranchNodes() {\n      return this.forest.normalizedOptions.some(rootNode => rootNode.isBranch)\n    },\n    shouldFlattenOptions() {\n      return this.localSearch.active && this.flattenSearchResults\n    },\n    /* eslint-enable valid-jsdoc */\n  },\n\n  watch: {\n    alwaysOpen(newValue) {\n      if (newValue) this.openMenu()\n      else this.closeMenu()\n    },\n\n    branchNodesFirst() {\n      this.initialize()\n    },\n\n    disabled(newValue) {\n      // force close the menu after disabling the control\n      if (newValue && this.menu.isOpen) this.closeMenu()\n      else if (!newValue && !this.menu.isOpen && this.alwaysOpen) this.openMenu()\n    },\n\n    flat() {\n      this.initialize()\n    },\n\n    internalValue(newValue, oldValue) {\n      const hasChanged = quickDiff(newValue, oldValue)\n      // #122\n      // Vue would trigger this watcher when `newValue` and `oldValue` are shallow-equal.\n      // We emit the `input` event only when the value actually changes.\n      if (hasChanged) this.$emit('input', this.getValue(), this.getInstanceId())\n    },\n\n    matchKeys() {\n      this.initialize()\n    },\n\n    multiple(newValue) {\n      // We need to rebuild the state when switching from single-select mode\n      // to multi-select mode.\n      // istanbul ignore else\n      if (newValue) this.buildForestState()\n    },\n\n    options: {\n      handler() {\n        if (this.async) return\n        // Re-initialize options when the `options` prop has changed.\n        this.initialize()\n        this.rootOptionsStates.isLoaded = Array.isArray(this.options)\n      },\n      deep: true,\n      immediate: true,\n    },\n\n    'trigger.searchQuery'() {\n      if (this.async) {\n        this.handleRemoteSearch()\n      } else {\n        this.handleLocalSearch()\n      }\n\n      this.$emit('search-change', this.trigger.searchQuery, this.getInstanceId())\n    },\n\n    value() {\n      const nodeIdsFromValue = this.extractCheckedNodeIdsFromValue()\n      const hasChanged = quickDiff(nodeIdsFromValue, this.internalValue)\n      if (hasChanged) this.fixSelectedNodeIds(nodeIdsFromValue)\n    },\n  },\n\n  methods: {\n    verifyProps() {\n      warning(\n        () => this.async ? this.searchable : true,\n        () => 'For async search mode, the value of \"searchable\" prop must be true.',\n      )\n\n      if (this.options == null && !this.loadOptions) {\n        warning(\n          () => false,\n          () => 'Are you meant to dynamically load options? You need to use \"loadOptions\" prop.',\n        )\n      }\n\n      if (this.flat) {\n        warning(\n          () => this.multiple,\n          () => 'You are using flat mode. But you forgot to add \"multiple=true\"?',\n        )\n      }\n\n      if (!this.flat) {\n        const propNames = [\n          'autoSelectAncestors',\n          'autoSelectDescendants',\n          'autoDeselectAncestors',\n          'autoDeselectDescendants',\n        ]\n\n        propNames.forEach(propName => {\n          warning(\n            () => !this[propName],\n            () => `\"${propName}\" only applies to flat mode.`,\n          )\n        })\n      }\n    },\n\n    resetFlags() {\n      this._blurOnSelect = false\n    },\n\n    initialize() {\n      const options = this.async\n        ? this.getRemoteSearchEntry().options\n        : this.options\n\n      if (Array.isArray(options)) {\n        // In case we are re-initializing options, keep the old state tree temporarily.\n        const prevNodeMap = this.forest.nodeMap\n        this.forest.nodeMap = createMap()\n        this.keepDataOfSelectedNodes(prevNodeMap)\n        this.forest.normalizedOptions = this.normalize(NO_PARENT_NODE, options, prevNodeMap)\n        // Cases that need fixing `selectedNodeIds`:\n        //   1) Children options of a checked node have been delayed loaded,\n        //      we should also mark these children as checked. (multi-select mode)\n        //   2) Root options have been delayed loaded, we need to initialize states\n        //      of these nodes. (multi-select mode)\n        //   3) Async search mode.\n        this.fixSelectedNodeIds(this.internalValue)\n      } else {\n        this.forest.normalizedOptions = []\n      }\n    },\n\n    getInstanceId() {\n      return this.instanceId == null ? this.id : this.instanceId\n    },\n\n    getValue() {\n      if (this.valueFormat === 'id') {\n        return this.multiple\n          ? this.internalValue.slice()\n          : this.internalValue[0]\n      }\n\n      const rawNodes = this.internalValue.map(id => this.getNode(id).raw)\n      return this.multiple ? rawNodes : rawNodes[0]\n    },\n\n    getNode(nodeId) {\n      warning(\n        () => nodeId != null,\n        () => `Invalid node id: ${nodeId}`,\n      )\n\n      if (nodeId == null) return null\n\n      return nodeId in this.forest.nodeMap\n        ? this.forest.nodeMap[nodeId]\n        : this.createFallbackNode(nodeId)\n    },\n\n    createFallbackNode(id) {\n      // In case there is a default selected node that is not loaded into the tree yet,\n      // we create a fallback node to keep the component working.\n      // When the real data is loaded, we'll override this fake node.\n\n      const raw = this.extractNodeFromValue(id)\n      const label = this.enhancedNormalizer(raw).label || `${id} (unknown)`\n      const fallbackNode = {\n        id,\n        label,\n        ancestors: [],\n        parentNode: NO_PARENT_NODE,\n        isFallbackNode: true,\n        isRootNode: true,\n        isLeaf: true,\n        isBranch: false,\n        isDisabled: false,\n        isNew: false,\n        index: [ -1 ],\n        level: 0,\n        raw,\n      }\n\n      return this.$set(this.forest.nodeMap, id, fallbackNode)\n    },\n\n    extractCheckedNodeIdsFromValue() {\n      if (this.value == null) return []\n\n      if (this.valueFormat === 'id') {\n        return this.multiple\n          ? this.value.slice()\n          : [ this.value ]\n      }\n\n      return (this.multiple ? this.value : [ this.value ])\n        .map(node => this.enhancedNormalizer(node))\n        .map(node => node.id)\n    },\n\n    extractNodeFromValue(id) {\n      const defaultNode = { id }\n\n      if (this.valueFormat === 'id') {\n        return defaultNode\n      }\n\n      const valueArray = this.multiple\n        ? Array.isArray(this.value) ? this.value : []\n        : this.value ? [ this.value ] : []\n      const matched = find(\n        valueArray,\n        node => node && this.enhancedNormalizer(node).id === id,\n      )\n\n      return matched || defaultNode\n    },\n\n    fixSelectedNodeIds(nodeIdListOfPrevValue) {\n      let nextSelectedNodeIds = []\n\n      // istanbul ignore else\n      if (this.single || this.flat || this.disableBranchNodes || this.valueConsistsOf === ALL) {\n        nextSelectedNodeIds = nodeIdListOfPrevValue\n      } else if (this.valueConsistsOf === BRANCH_PRIORITY) {\n        nodeIdListOfPrevValue.forEach(nodeId => {\n          nextSelectedNodeIds.push(nodeId)\n          const node = this.getNode(nodeId)\n          if (node.isBranch) this.traverseDescendantsBFS(node, descendant => {\n            nextSelectedNodeIds.push(descendant.id)\n          })\n        })\n      } else if (this.valueConsistsOf === LEAF_PRIORITY) {\n        const map = createMap()\n        const queue = nodeIdListOfPrevValue.slice()\n        while (queue.length) {\n          const nodeId = queue.shift()\n          const node = this.getNode(nodeId)\n          nextSelectedNodeIds.push(nodeId)\n          if (node.isRootNode) continue\n          if (!(node.parentNode.id in map)) map[node.parentNode.id] = node.parentNode.children.length\n          if (--map[node.parentNode.id] === 0) queue.push(node.parentNode.id)\n        }\n      } else if (this.valueConsistsOf === ALL_WITH_INDETERMINATE) {\n        const map = createMap()\n        const queue = nodeIdListOfPrevValue.filter(nodeId => {\n          const node = this.getNode(nodeId)\n          return node.isLeaf || node.children.length === 0\n        })\n        while (queue.length) {\n          const nodeId = queue.shift()\n          const node = this.getNode(nodeId)\n          nextSelectedNodeIds.push(nodeId)\n          if (node.isRootNode) continue\n          if (!(node.parentNode.id in map)) map[node.parentNode.id] = node.parentNode.children.length\n          if (--map[node.parentNode.id] === 0) queue.push(node.parentNode.id)\n        }\n      }\n\n      const hasChanged = quickDiff(this.forest.selectedNodeIds, nextSelectedNodeIds)\n      // If `nextSelectedNodeIds` doesn't actually differ from old `selectedNodeIds`,\n      // we don't make the assignment to avoid triggering its watchers which may cause\n      // unnecessary calculations.\n      if (hasChanged) this.forest.selectedNodeIds = nextSelectedNodeIds\n\n      this.buildForestState()\n    },\n\n    keepDataOfSelectedNodes(prevNodeMap) {\n      // In case there is any selected node that is not present in the new `options` array.\n      // It could be useful for async search mode.\n      this.forest.selectedNodeIds.forEach(id => {\n        if (!prevNodeMap[id]) return\n        const node = {\n          ...prevNodeMap[id],\n          isFallbackNode: true,\n        }\n        this.$set(this.forest.nodeMap, id, node)\n      })\n    },\n\n    isSelected(node) {\n      // whether a node is selected (single-select mode) or fully-checked (multi-select mode)\n      return this.forest.selectedNodeMap[node.id] === true\n    },\n\n    traverseDescendantsBFS(parentNode, callback) {\n      // istanbul ignore if\n      if (!parentNode.isBranch) return\n      const queue = parentNode.children.slice()\n      while (queue.length) {\n        const currNode = queue[0]\n        if (currNode.isBranch) queue.push(...currNode.children)\n        callback(currNode)\n        queue.shift()\n      }\n    },\n\n    traverseDescendantsDFS(parentNode, callback) {\n      if (!parentNode.isBranch) return\n      parentNode.children.forEach(child => {\n        // deep-level node first\n        this.traverseDescendantsDFS(child, callback)\n        callback(child)\n      })\n    },\n\n    traverseAllNodesDFS(callback) {\n      this.forest.normalizedOptions.forEach(rootNode => {\n        // deep-level node first\n        this.traverseDescendantsDFS(rootNode, callback)\n        callback(rootNode)\n      })\n    },\n\n    traverseAllNodesByIndex(callback) {\n      const walk = parentNode => {\n        parentNode.children.forEach(child => {\n          if (callback(child) !== false && child.isBranch) {\n            walk(child)\n          }\n        })\n      }\n\n      // To simplify the code logic of traversal,\n      // we create a fake root node that holds all the root options.\n      walk({ children: this.forest.normalizedOptions })\n    },\n\n    toggleClickOutsideEvent(enabled) {\n      if (enabled) {\n        document.addEventListener('mousedown', this.handleClickOutside, false)\n      } else {\n        document.removeEventListener('mousedown', this.handleClickOutside, false)\n      }\n    },\n\n    getValueContainer() {\n      return this.$refs.control.$refs['value-container']\n    },\n\n    getInput() {\n      return this.getValueContainer().$refs.input\n    },\n\n    focusInput() {\n      this.getInput().focus()\n    },\n\n    blurInput() {\n      this.getInput().blur()\n    },\n\n    handleMouseDown: onLeftClick(function handleMouseDown(evt) {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (this.disabled) return\n\n      const isClickedOnValueContainer = this.getValueContainer().$el.contains(evt.target)\n      if (isClickedOnValueContainer && !this.menu.isOpen && (this.openOnClick || this.trigger.isFocused)) {\n        this.openMenu()\n      }\n\n      if (this._blurOnSelect) {\n        this.blurInput()\n      } else {\n        // Focus the input or prevent blurring.\n        this.focusInput()\n      }\n\n      this.resetFlags()\n    }),\n\n    handleClickOutside(evt) {\n      // istanbul ignore else\n      if (this.$refs.wrapper && !this.$refs.wrapper.contains(evt.target)) {\n        this.blurInput()\n        this.closeMenu()\n      }\n    },\n\n    handleLocalSearch() {\n      const { searchQuery } = this.trigger\n      const done = () => this.resetHighlightedOptionWhenNecessary(true)\n\n      if (!searchQuery) {\n        // Exit sync search mode.\n        this.localSearch.active = false\n        return done()\n      }\n\n      // Enter sync search mode.\n      this.localSearch.active = true\n\n      // Reset states.\n      this.localSearch.noResults = true\n      this.traverseAllNodesDFS(node => {\n        if (node.isBranch) {\n          node.isExpandedOnSearch = false\n          node.showAllChildrenOnSearch = false\n          node.isMatched = false\n          node.hasMatchedDescendants = false\n          this.$set(this.localSearch.countMap, node.id, {\n            [ALL_CHILDREN]: 0,\n            [ALL_DESCENDANTS]: 0,\n            [LEAF_CHILDREN]: 0,\n            [LEAF_DESCENDANTS]: 0,\n          })\n        }\n      })\n\n      const lowerCasedSearchQuery = searchQuery.trim().toLocaleLowerCase()\n      const splitSearchQuery = lowerCasedSearchQuery.replace(/\\s+/g, ' ').split(' ')\n      this.traverseAllNodesDFS(node => {\n        if (this.searchNested && splitSearchQuery.length > 1) {\n          node.isMatched = splitSearchQuery.every(filterValue =>\n            match(false, filterValue, node.nestedSearchLabel),\n          )\n        } else {\n          node.isMatched = this.matchKeys.some(matchKey =>\n            match(!this.disableFuzzyMatching, lowerCasedSearchQuery, node.lowerCased[matchKey]),\n          )\n        }\n\n        if (node.isMatched) {\n          this.localSearch.noResults = false\n          node.ancestors.forEach(ancestor => this.localSearch.countMap[ancestor.id][ALL_DESCENDANTS]++)\n          if (node.isLeaf) node.ancestors.forEach(ancestor => this.localSearch.countMap[ancestor.id][LEAF_DESCENDANTS]++)\n          if (node.parentNode !== NO_PARENT_NODE) {\n            this.localSearch.countMap[node.parentNode.id][ALL_CHILDREN] += 1\n            // istanbul ignore else\n            if (node.isLeaf) this.localSearch.countMap[node.parentNode.id][LEAF_CHILDREN] += 1\n          }\n        }\n\n        if (\n          (node.isMatched || (node.isBranch && node.isExpandedOnSearch)) &&\n          node.parentNode !== NO_PARENT_NODE\n        ) {\n          node.parentNode.isExpandedOnSearch = true\n          node.parentNode.hasMatchedDescendants = true\n        }\n      })\n\n      done()\n    },\n\n    handleRemoteSearch() {\n      const { searchQuery } = this.trigger\n      const entry = this.getRemoteSearchEntry()\n      const done = () => {\n        this.initialize()\n        this.resetHighlightedOptionWhenNecessary(true)\n      }\n\n      if ((searchQuery === '' || this.cacheOptions) && entry.isLoaded) {\n        return done()\n      }\n\n      this.callLoadOptionsProp({\n        action: ASYNC_SEARCH,\n        args: { searchQuery },\n        isPending() {\n          return entry.isLoading\n        },\n        start: () => {\n          entry.isLoading = true\n          entry.isLoaded = false\n          entry.loadingError = ''\n        },\n        succeed: options => {\n          entry.isLoaded = true\n          entry.options = options\n          // When the request completes, the search query may have changed.\n          // We only show these options if they are for the current search query.\n          if (this.trigger.searchQuery === searchQuery) done()\n        },\n        fail: err => {\n          entry.loadingError = getErrorMessage(err)\n        },\n        end: () => {\n          entry.isLoading = false\n        },\n      })\n    },\n\n    getRemoteSearchEntry() {\n      const { searchQuery } = this.trigger\n      const entry = this.remoteSearch[searchQuery] || {\n        ...createAsyncOptionsStates(),\n        options: [],\n      }\n\n      // Stop watching when options\n      // Vue doesn't support directly watching on objects.\n      // this.$watch(\n      //   () => entry.options,\n      //   () => {\n      //     // TODO: potential redundant re-initialization.\n      //     if (this.trigger.searchQuery === searchQuery) this.initialize()\n      //   },\n      //   { deep: true },\n      // )\n\n      if (searchQuery === '') {\n        if (Array.isArray(this.defaultOptions)) {\n          entry.options = this.defaultOptions\n          entry.isLoaded = true\n          return entry\n        } else if (this.defaultOptions !== true) {\n          entry.isLoaded = true\n          return entry\n        }\n      }\n\n      if (!this.remoteSearch[searchQuery]) {\n        this.$set(this.remoteSearch, searchQuery, entry)\n      }\n\n      return entry\n    },\n\n    shouldExpand(node) {\n      return this.localSearch.active ? node.isExpandedOnSearch : node.isExpanded\n    },\n\n    shouldOptionBeIncludedInSearchResult(node) {\n      // 1) This option is matched.\n      if (node.isMatched) return true\n      // 2) This option is not matched, but has matched descendant(s).\n      if (node.isBranch && node.hasMatchedDescendants && !this.flattenSearchResults) return true\n      // 3) This option's parent has no matched descendants,\n      //    but after being expanded, all its children should be shown.\n      if (!node.isRootNode && node.parentNode.showAllChildrenOnSearch) return true\n      // 4) The default case.\n      return false\n    },\n\n    shouldShowOptionInMenu(node) {\n      if (this.localSearch.active && !this.shouldOptionBeIncludedInSearchResult(node)) {\n        return false\n      }\n      return true\n    },\n\n    getControl() {\n      return this.$refs.control.$el\n    },\n\n    getMenu() {\n      const ref = this.appendToBody ? this.$refs.portal.portalTarget : this\n      const $menu = ref.$refs.menu.$refs.menu\n      return $menu && $menu.nodeName !== '#comment' ? $menu : null\n    },\n\n    setCurrentHighlightedOption(node, scroll = true) {\n      const prev = this.menu.current\n      if (prev != null && prev in this.forest.nodeMap) {\n        this.forest.nodeMap[prev].isHighlighted = false\n      }\n\n      this.menu.current = node.id\n      node.isHighlighted = true\n\n      if (this.menu.isOpen && scroll) {\n        const scrollToOption = () => {\n          const $menu = this.getMenu()\n          const $option = $menu.querySelector(`.vue-treeselect__option[data-id=\"${node.id}\"]`)\n          if ($option) scrollIntoView($menu, $option)\n        }\n\n        // In case `openMenu()` is just called and the menu is not rendered yet.\n        if (this.getMenu()) {\n          scrollToOption()\n        } else {\n          // istanbul ignore next\n          this.$nextTick(scrollToOption)\n        }\n      }\n    },\n\n    resetHighlightedOptionWhenNecessary(forceReset = false) {\n      const { current } = this.menu\n\n      if (\n        forceReset || current == null ||\n        !(current in this.forest.nodeMap) ||\n        !this.shouldShowOptionInMenu(this.getNode(current))\n      ) {\n        this.highlightFirstOption()\n      }\n    },\n\n    highlightFirstOption() {\n      if (!this.hasVisibleOptions) return\n\n      const first = this.visibleOptionIds[0]\n      this.setCurrentHighlightedOption(this.getNode(first))\n    },\n\n    highlightPrevOption() {\n      if (!this.hasVisibleOptions) return\n\n      const prev = this.visibleOptionIds.indexOf(this.menu.current) - 1\n      if (prev === -1) return this.highlightLastOption()\n      this.setCurrentHighlightedOption(this.getNode(this.visibleOptionIds[prev]))\n    },\n\n    highlightNextOption() {\n      if (!this.hasVisibleOptions) return\n\n      const next = this.visibleOptionIds.indexOf(this.menu.current) + 1\n      if (next === this.visibleOptionIds.length) return this.highlightFirstOption()\n      this.setCurrentHighlightedOption(this.getNode(this.visibleOptionIds[next]))\n    },\n\n    highlightLastOption() {\n      if (!this.hasVisibleOptions) return\n\n      const last = getLast(this.visibleOptionIds)\n      this.setCurrentHighlightedOption(this.getNode(last))\n    },\n\n    resetSearchQuery() {\n      this.trigger.searchQuery = ''\n    },\n\n    closeMenu() {\n      if (!this.menu.isOpen || (!this.disabled && this.alwaysOpen)) return\n      this.saveMenuScrollPosition()\n      this.menu.isOpen = false\n      this.toggleClickOutsideEvent(false)\n      this.resetSearchQuery()\n      this.$emit('close', this.getValue(), this.getInstanceId())\n    },\n\n    openMenu() {\n      if (this.disabled || this.menu.isOpen) return\n      this.menu.isOpen = true\n      this.$nextTick(this.resetHighlightedOptionWhenNecessary)\n      this.$nextTick(this.restoreMenuScrollPosition)\n      if (!this.options && !this.async) this.loadRootOptions()\n      this.toggleClickOutsideEvent(true)\n      this.$emit('open', this.getInstanceId())\n    },\n\n    toggleMenu() {\n      if (this.menu.isOpen) {\n        this.closeMenu()\n      } else {\n        this.openMenu()\n      }\n    },\n\n    toggleExpanded(node) {\n      let nextState\n\n      if (this.localSearch.active) {\n        nextState = node.isExpandedOnSearch = !node.isExpandedOnSearch\n        if (nextState) node.showAllChildrenOnSearch = true\n      } else {\n        nextState = node.isExpanded = !node.isExpanded\n      }\n\n      if (nextState && !node.childrenStates.isLoaded) {\n        this.loadChildrenOptions(node)\n      }\n    },\n\n    buildForestState() {\n      const selectedNodeMap = createMap()\n      this.forest.selectedNodeIds.forEach(selectedNodeId => {\n        selectedNodeMap[selectedNodeId] = true\n      })\n      this.forest.selectedNodeMap = selectedNodeMap\n\n      const checkedStateMap = createMap()\n      if (this.multiple) {\n        this.traverseAllNodesByIndex(node => {\n          checkedStateMap[node.id] = UNCHECKED\n        })\n\n        this.selectedNodes.forEach(selectedNode => {\n          checkedStateMap[selectedNode.id] = CHECKED\n\n          if (!this.flat && !this.disableBranchNodes) {\n            selectedNode.ancestors.forEach(ancestorNode => {\n              if (!this.isSelected(ancestorNode)) {\n                checkedStateMap[ancestorNode.id] = INDETERMINATE\n              }\n            })\n          }\n        })\n      }\n      this.forest.checkedStateMap = checkedStateMap\n    },\n\n    enhancedNormalizer(raw) {\n      return {\n        ...raw,\n        ...this.normalizer(raw, this.getInstanceId()),\n      }\n    },\n\n    normalize(parentNode, nodes, prevNodeMap) {\n      let normalizedOptions = nodes\n        .map(node => [ this.enhancedNormalizer(node), node ])\n        .map(([ node, raw ], index) => {\n          this.checkDuplication(node)\n          this.verifyNodeShape(node)\n\n          const { id, label, children, isDefaultExpanded } = node\n          const isRootNode = parentNode === NO_PARENT_NODE\n          const level = isRootNode ? 0 : parentNode.level + 1\n          const isBranch = Array.isArray(children) || children === null\n          const isLeaf = !isBranch\n          const isDisabled = !!node.isDisabled || (!this.flat && !isRootNode && parentNode.isDisabled)\n          const isNew = !!node.isNew\n          const lowerCased = this.matchKeys.reduce((prev, key) => ({\n            ...prev,\n            [key]: stringifyOptionPropValue(node[key]).toLocaleLowerCase(),\n          }), {})\n          const nestedSearchLabel = isRootNode\n            ? lowerCased.label\n            : parentNode.nestedSearchLabel + ' ' + lowerCased.label\n\n          const normalized = this.$set(this.forest.nodeMap, id, createMap())\n          this.$set(normalized, 'id', id)\n          this.$set(normalized, 'label', label)\n          this.$set(normalized, 'level', level)\n          this.$set(normalized, 'ancestors', isRootNode ? [] : [ parentNode ].concat(parentNode.ancestors))\n          this.$set(normalized, 'index', (isRootNode ? [] : parentNode.index).concat(index))\n          this.$set(normalized, 'parentNode', parentNode)\n          this.$set(normalized, 'lowerCased', lowerCased)\n          this.$set(normalized, 'nestedSearchLabel', nestedSearchLabel)\n          this.$set(normalized, 'isDisabled', isDisabled)\n          this.$set(normalized, 'isNew', isNew)\n          this.$set(normalized, 'isMatched', false)\n          this.$set(normalized, 'isHighlighted', false)\n          this.$set(normalized, 'isBranch', isBranch)\n          this.$set(normalized, 'isLeaf', isLeaf)\n          this.$set(normalized, 'isRootNode', isRootNode)\n          this.$set(normalized, 'raw', raw)\n\n          if (isBranch) {\n            const isLoaded = Array.isArray(children)\n\n            this.$set(normalized, 'childrenStates', {\n              ...createAsyncOptionsStates(),\n              isLoaded,\n            })\n            this.$set(normalized, 'isExpanded', typeof isDefaultExpanded === 'boolean'\n              ? isDefaultExpanded\n              : level < this.defaultExpandLevel)\n            this.$set(normalized, 'hasMatchedDescendants', false)\n            this.$set(normalized, 'hasDisabledDescendants', false)\n            this.$set(normalized, 'isExpandedOnSearch', false)\n            this.$set(normalized, 'showAllChildrenOnSearch', false)\n            this.$set(normalized, 'count', {\n              [ALL_CHILDREN]: 0,\n              [ALL_DESCENDANTS]: 0,\n              [LEAF_CHILDREN]: 0,\n              [LEAF_DESCENDANTS]: 0,\n            })\n            this.$set(normalized, 'children', isLoaded\n              ? this.normalize(normalized, children, prevNodeMap)\n              : [])\n\n            if (isDefaultExpanded === true) normalized.ancestors.forEach(ancestor => {\n              ancestor.isExpanded = true\n            })\n\n            if (!isLoaded && typeof this.loadOptions !== 'function') {\n              warning(\n                () => false,\n                () => 'Unloaded branch node detected. \"loadOptions\" prop is required to load its children.',\n              )\n            } else if (!isLoaded && normalized.isExpanded) {\n              this.loadChildrenOptions(normalized)\n            }\n          }\n\n          normalized.ancestors.forEach(ancestor => ancestor.count[ALL_DESCENDANTS]++)\n          if (isLeaf) normalized.ancestors.forEach(ancestor => ancestor.count[LEAF_DESCENDANTS]++)\n          if (!isRootNode) {\n            parentNode.count[ALL_CHILDREN] += 1\n            if (isLeaf) parentNode.count[LEAF_CHILDREN] += 1\n            if (isDisabled) parentNode.hasDisabledDescendants = true\n          }\n\n          // Preserve previous states.\n          if (prevNodeMap && prevNodeMap[id]) {\n            const prev = prevNodeMap[id]\n\n            normalized.isMatched = prev.isMatched\n            normalized.showAllChildrenOnSearch = prev.showAllChildrenOnSearch\n            normalized.isHighlighted = prev.isHighlighted\n\n            if (prev.isBranch && normalized.isBranch) {\n              normalized.isExpanded = prev.isExpanded\n              normalized.isExpandedOnSearch = prev.isExpandedOnSearch\n              // #97\n              // If `isLoaded` was true, but IS NOT now, we consider this branch node\n              // to be reset to unloaded state by the user of this component.\n              if (prev.childrenStates.isLoaded && !normalized.childrenStates.isLoaded) {\n                // Make sure the node is collapsed, then the user can load its\n                // children again (by expanding).\n                normalized.isExpanded = false\n                // We have reset `childrenStates` and don't want to preserve states here.\n              } else {\n                normalized.childrenStates = { ...prev.childrenStates }\n              }\n            }\n          }\n\n          return normalized\n        })\n\n      if (this.branchNodesFirst) {\n        const branchNodes = normalizedOptions.filter(option => option.isBranch)\n        const leafNodes = normalizedOptions.filter(option => option.isLeaf)\n        normalizedOptions = branchNodes.concat(leafNodes)\n      }\n\n      return normalizedOptions\n    },\n\n    loadRootOptions() {\n      this.callLoadOptionsProp({\n        action: LOAD_ROOT_OPTIONS,\n        isPending: () => {\n          return this.rootOptionsStates.isLoading\n        },\n        start: () => {\n          this.rootOptionsStates.isLoading = true\n          this.rootOptionsStates.loadingError = ''\n        },\n        succeed: () => {\n          this.rootOptionsStates.isLoaded = true\n          // Wait for `options` being re-initialized.\n          this.$nextTick(() => {\n            this.resetHighlightedOptionWhenNecessary(true)\n          })\n        },\n        fail: err => {\n          this.rootOptionsStates.loadingError = getErrorMessage(err)\n        },\n        end: () => {\n          this.rootOptionsStates.isLoading = false\n        },\n      })\n    },\n\n    loadChildrenOptions(parentNode) {\n      // The options may be re-initialized anytime during the loading process.\n      // So `parentNode` can be stale and we use `getNode()` to avoid that.\n\n      const { id, raw } = parentNode\n\n      this.callLoadOptionsProp({\n        action: LOAD_CHILDREN_OPTIONS,\n        args: {\n          // We always pass the raw node instead of the normalized node to any\n          // callback provided by the user of this component.\n          // Because the shape of the raw node is more likely to be closing to\n          // what the back-end API service of the application needs.\n          parentNode: raw,\n        },\n        isPending: () => {\n          return this.getNode(id).childrenStates.isLoading\n        },\n        start: () => {\n          this.getNode(id).childrenStates.isLoading = true\n          this.getNode(id).childrenStates.loadingError = ''\n        },\n        succeed: () => {\n          this.getNode(id).childrenStates.isLoaded = true\n        },\n        fail: err => {\n          this.getNode(id).childrenStates.loadingError = getErrorMessage(err)\n        },\n        end: () => {\n          this.getNode(id).childrenStates.isLoading = false\n        },\n      })\n    },\n\n    callLoadOptionsProp({ action, args, isPending, start, succeed, fail, end }) {\n      if (!this.loadOptions || isPending()) {\n        return\n      }\n\n      start()\n\n      const callback = once((err, result) => {\n        if (err) {\n          fail(err)\n        } else {\n          succeed(result)\n        }\n\n        end()\n      })\n      const result = this.loadOptions({\n        id: this.getInstanceId(),\n        instanceId: this.getInstanceId(),\n        action,\n        ...args,\n        callback,\n      })\n\n      if (isPromise(result)) {\n        result.then(() => {\n          callback()\n        }, err => {\n          callback(err)\n        }).catch(err => {\n          // istanbul ignore next\n          console.error(err)\n        })\n      }\n    },\n\n    checkDuplication(node) {\n      warning(\n        () => !((node.id in this.forest.nodeMap) && !this.forest.nodeMap[node.id].isFallbackNode),\n        () => `Detected duplicate presence of node id ${JSON.stringify(node.id)}. ` +\n          `Their labels are \"${this.forest.nodeMap[node.id].label}\" and \"${node.label}\" respectively.`,\n      )\n    },\n\n    verifyNodeShape(node) {\n      warning(\n        () => !(node.children === undefined && node.isBranch === true),\n        () => 'Are you meant to declare an unloaded branch node? ' +\n          '`isBranch: true` is no longer supported, please use `children: null` instead.',\n      )\n    },\n\n    select(node) {\n      if (this.disabled || node.isDisabled) {\n        return\n      }\n\n      if (this.single) {\n        this.clear()\n      }\n\n      const nextState = this.multiple && !this.flat\n        ? this.forest.checkedStateMap[node.id] === UNCHECKED\n        : !this.isSelected(node)\n\n      if (nextState) {\n        this._selectNode(node)\n      } else {\n        this._deselectNode(node)\n      }\n\n      this.buildForestState()\n\n      if (nextState) {\n        this.$emit('select', node.raw, this.getInstanceId())\n      } else {\n        this.$emit('deselect', node.raw, this.getInstanceId())\n      }\n\n      if (this.localSearch.active && nextState && (this.single || this.clearOnSelect)) {\n        this.resetSearchQuery()\n      }\n\n      if (this.single && this.closeOnSelect) {\n        this.closeMenu()\n\n        // istanbul ignore else\n        if (this.searchable) {\n          this._blurOnSelect = true\n        }\n      }\n    },\n\n    clear() {\n      if (this.hasValue) {\n        if (this.single || this.allowClearingDisabled) {\n          this.forest.selectedNodeIds = []\n        } else /* if (this.multiple && !this.allowClearingDisabled) */ {\n          this.forest.selectedNodeIds = this.forest.selectedNodeIds.filter(nodeId =>\n            this.getNode(nodeId).isDisabled,\n          )\n        }\n\n        this.buildForestState()\n      }\n    },\n\n    // This is meant to be called only by `select()`.\n    _selectNode(node) {\n      if (this.single || this.disableBranchNodes) {\n        return this.addValue(node)\n      }\n\n      if (this.flat) {\n        this.addValue(node)\n\n        if (this.autoSelectAncestors) {\n          node.ancestors.forEach(ancestor => {\n            if (!this.isSelected(ancestor) && !ancestor.isDisabled) this.addValue(ancestor)\n          })\n        } else if (this.autoSelectDescendants) {\n          this.traverseDescendantsBFS(node, descendant => {\n            if (!this.isSelected(descendant) && !descendant.isDisabled) this.addValue(descendant)\n          })\n        }\n\n        return\n      }\n\n      const isFullyChecked = (\n        node.isLeaf ||\n        (/* node.isBranch && */!node.hasDisabledDescendants) ||\n        (/* node.isBranch && */this.allowSelectingDisabledDescendants)\n      )\n      if (isFullyChecked) {\n        this.addValue(node)\n      }\n\n      if (node.isBranch) {\n        this.traverseDescendantsBFS(node, descendant => {\n          if (!descendant.isDisabled || this.allowSelectingDisabledDescendants) {\n            this.addValue(descendant)\n          }\n        })\n      }\n\n      if (isFullyChecked) {\n        let curr = node\n        while ((curr = curr.parentNode) !== NO_PARENT_NODE) {\n          if (curr.children.every(this.isSelected)) this.addValue(curr)\n          else break\n        }\n      }\n    },\n\n    // This is meant to be called only by `select()`.\n    _deselectNode(node) {\n      if (this.disableBranchNodes) {\n        return this.removeValue(node)\n      }\n\n      if (this.flat) {\n        this.removeValue(node)\n\n        if (this.autoDeselectAncestors) {\n          node.ancestors.forEach(ancestor => {\n            if (this.isSelected(ancestor) && !ancestor.isDisabled) this.removeValue(ancestor)\n          })\n        } else if (this.autoDeselectDescendants) {\n          this.traverseDescendantsBFS(node, descendant => {\n            if (this.isSelected(descendant) && !descendant.isDisabled) this.removeValue(descendant)\n          })\n        }\n\n        return\n      }\n\n      let hasUncheckedSomeDescendants = false\n      if (node.isBranch) {\n        this.traverseDescendantsDFS(node, descendant => {\n          if (!descendant.isDisabled || this.allowSelectingDisabledDescendants) {\n            this.removeValue(descendant)\n            hasUncheckedSomeDescendants = true\n          }\n        })\n      }\n\n      if (\n        node.isLeaf ||\n        /* node.isBranch && */hasUncheckedSomeDescendants ||\n        /* node.isBranch && */node.children.length === 0\n      ) {\n        this.removeValue(node)\n\n        let curr = node\n        while ((curr = curr.parentNode) !== NO_PARENT_NODE) {\n          if (this.isSelected(curr)) this.removeValue(curr)\n          else break\n        }\n      }\n    },\n\n    addValue(node) {\n      this.forest.selectedNodeIds.push(node.id)\n      this.forest.selectedNodeMap[node.id] = true\n    },\n\n    removeValue(node) {\n      removeFromArray(this.forest.selectedNodeIds, node.id)\n      delete this.forest.selectedNodeMap[node.id]\n    },\n\n    removeLastValue() {\n      if (!this.hasValue) return\n      if (this.single) return this.clear()\n      const lastValue = getLast(this.internalValue)\n      const lastSelectedNode = this.getNode(lastValue)\n      this.select(lastSelectedNode) // deselect\n    },\n\n    saveMenuScrollPosition() {\n      const $menu = this.getMenu()\n      // istanbul ignore else\n      if ($menu) this.menu.lastScrollPosition = $menu.scrollTop\n    },\n\n    restoreMenuScrollPosition() {\n      const $menu = this.getMenu()\n      // istanbul ignore else\n      if ($menu) $menu.scrollTop = this.menu.lastScrollPosition\n    },\n  },\n\n  created() {\n    this.verifyProps()\n    this.resetFlags()\n  },\n\n  mounted() {\n    if (this.autoFocus) this.focusInput()\n    if (!this.options && !this.async && this.autoLoadRootOptions) this.loadRootOptions()\n    if (this.alwaysOpen) this.openMenu()\n    if (this.async && this.defaultOptions) this.handleRemoteSearch()\n  },\n\n  destroyed() {\n    // istanbul ignore next\n    this.toggleClickOutsideEvent(false)\n  },\n}\n","<script>\n  import { isNaN } from '../utils'\n\n  function stringifyValue(value) {\n    if (typeof value === 'string') return value\n    // istanbul ignore else\n    if (value != null && !isNaN(value)) return JSON.stringify(value)\n    // istanbul ignore next\n    return ''\n  }\n\n  export default {\n    name: 'vue-treeselect--hidden-fields',\n    inject: [ 'instance' ],\n    functional: true,\n\n    render(_, context) {\n      const { instance } = context.injections\n\n      if (!instance.name || instance.disabled || !instance.hasValue) return null\n\n      let stringifiedValues = instance.internalValue.map(stringifyValue)\n\n      if (instance.multiple && instance.joinValues) stringifiedValues = [\n        stringifiedValues.join(instance.delimiter),\n      ]\n\n      return stringifiedValues.map((stringifiedValue, i) => (\n        <input type=\"hidden\"\n          name={instance.name}\n          value={stringifiedValue}\n          key={'hidden-field-' + i}\n        />\n      ))\n    },\n  }\n</script>\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent(\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */,\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options =\n    typeof scriptExports === 'function' ? scriptExports.options : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) {\n    // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n          injectStyles.call(\n            this,\n            (options.functional ? this.parent : this).$root.$options.shadowRoot\n          )\n        }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var render, staticRenderFns\nimport script from \"./HiddenFields.vue?vue&type=script&lang=js\"\nexport * from \"./HiddenFields.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\n  import { debounce, deepExtend, includes } from '../utils'\n  import { MIN_INPUT_WIDTH, KEY_CODES, INPUT_DEBOUNCE_DELAY } from '../constants'\n\n  const keysThatRequireMenuBeingOpen = [\n    KEY_CODES.ENTER,\n    KEY_CODES.END,\n    KEY_CODES.HOME,\n    KEY_CODES.ARROW_LEFT,\n    KEY_CODES.ARROW_UP,\n    KEY_CODES.ARROW_RIGHT,\n    KEY_CODES.ARROW_DOWN,\n  ]\n\n  export default {\n    name: 'vue-treeselect--input',\n    inject: [ 'instance' ],\n\n    data: () => ({\n      inputWidth: MIN_INPUT_WIDTH,\n      value: '',\n    }),\n\n    computed: {\n      needAutoSize() {\n        const { instance } = this\n\n        return (\n          instance.searchable &&\n          !instance.disabled &&\n          instance.multiple\n        )\n      },\n\n      inputStyle() {\n        return {\n          width: this.needAutoSize ? `${this.inputWidth}px` : null,\n        }\n      },\n    },\n\n    watch: {\n      'instance.trigger.searchQuery'(newValue) {\n        this.value = newValue\n      },\n\n      value() {\n        // istanbul ignore else\n        if (this.needAutoSize) this.$nextTick(this.updateInputWidth)\n      },\n    },\n\n    created() {\n      this.debouncedCallback = debounce(\n        this.updateSearchQuery,\n        INPUT_DEBOUNCE_DELAY,\n        { leading: true, trailing: true },\n      )\n    },\n\n    methods: {\n      clear() {\n        this.onInput({\n          target: { value: '' },\n        })\n      },\n\n      focus() {\n        const { instance } = this\n\n        if (!instance.disabled) {\n          this.$refs.input && this.$refs.input.focus()\n        }\n      },\n\n      blur() {\n        this.$refs.input && this.$refs.input.blur()\n      },\n\n      onFocus() {\n        const { instance } = this\n\n        instance.trigger.isFocused = true\n        // istanbul ignore else\n        if (instance.openOnFocus) instance.openMenu()\n      },\n\n      onBlur() {\n        const { instance } = this\n        const menu = instance.getMenu()\n\n        // #15\n        // istanbul ignore next\n        if (menu && document.activeElement === menu) {\n          return this.focus()\n        }\n\n        instance.trigger.isFocused = false\n        instance.closeMenu()\n      },\n\n      onInput(evt) {\n        const { value } = evt.target\n\n        this.value = value\n\n        if (value) {\n          this.debouncedCallback()\n        } else {\n          this.debouncedCallback.cancel()\n          this.updateSearchQuery()\n        }\n      },\n\n      // 用 keyUp 事件存在一个问题，删除输入框最后一个字符也会导致取消选中最后一项\n      onKeyDown(evt) {\n        const { instance } = this\n        // https://css-tricks.com/snippets/javascript/javascript-keycodes/\n        // https://stackoverflow.com/questions/4471582/javascript-keycode-vs-which\n        const key = 'which' in evt ? evt.which : /* istanbul ignore next */ evt.keyCode\n\n        if (evt.ctrlKey || evt.shiftKey || evt.altKey || evt.metaKey)\n          return\n\n        if (!instance.menu.isOpen && includes(keysThatRequireMenuBeingOpen, key)) {\n          evt.preventDefault()\n          return instance.openMenu()\n        }\n\n        switch (key) {\n        case KEY_CODES.BACKSPACE: {\n          if (instance.backspaceRemoves && !this.value.length) {\n            instance.removeLastValue()\n          }\n          break\n        }\n        case KEY_CODES.ENTER: {\n          evt.preventDefault()\n          if (instance.menu.current === null) return\n          const current = instance.getNode(instance.menu.current)\n          if (current.isBranch && instance.disableBranchNodes) return\n          instance.select(current)\n          break\n        }\n        case KEY_CODES.ESCAPE: {\n          if (this.value.length) {\n            this.clear()\n          } else if (instance.menu.isOpen) {\n            instance.closeMenu()\n          }\n          break\n        }\n        case KEY_CODES.END: {\n          evt.preventDefault()\n          instance.highlightLastOption()\n          break\n        }\n        case KEY_CODES.HOME: {\n          evt.preventDefault()\n          instance.highlightFirstOption()\n          break\n        }\n        case KEY_CODES.ARROW_LEFT: {\n          const current = instance.getNode(instance.menu.current)\n          if (current.isBranch && instance.shouldExpand(current)) {\n            evt.preventDefault()\n            instance.toggleExpanded(current)\n          } else if (!current.isRootNode && (current.isLeaf || (current.isBranch && !(instance.shouldExpand(current))))) {\n            evt.preventDefault()\n            instance.setCurrentHighlightedOption(current.parentNode)\n          }\n          break\n        }\n        case KEY_CODES.ARROW_UP: {\n          evt.preventDefault()\n          instance.highlightPrevOption()\n          break\n        }\n        case KEY_CODES.ARROW_RIGHT: {\n          const current = instance.getNode(instance.menu.current)\n          if (current.isBranch && !instance.shouldExpand(current)) {\n            evt.preventDefault()\n            instance.toggleExpanded(current)\n          }\n          break\n        }\n        case KEY_CODES.ARROW_DOWN: {\n          evt.preventDefault()\n          instance.highlightNextOption()\n          break\n        }\n        case KEY_CODES.DELETE: {\n          if (instance.deleteRemoves && !this.value.length) {\n            instance.removeLastValue()\n          }\n          break\n        }\n        default: {\n          // istanbul ignore else\n          instance.openMenu()\n        }\n        }\n      },\n\n      onMouseDown(evt) {\n        // istanbul ignore next\n        if (this.value.length) {\n          // Prevent it from bubbling to the top level and triggering `preventDefault()`\n          // to make the textbox unselectable\n          evt.stopPropagation()\n        }\n      },\n\n      renderInputContainer() {\n        const { instance } = this\n        const props = {}\n        const children = []\n\n        if (instance.searchable && !instance.disabled) {\n          children.push(this.renderInput())\n          if (this.needAutoSize) children.push(this.renderSizer())\n        }\n\n        if (!instance.searchable) {\n          deepExtend(props, {\n            on: {\n              focus: this.onFocus,\n              blur: this.onBlur,\n              keydown: this.onKeyDown,\n            },\n            ref: 'input',\n          })\n        }\n\n        if (!instance.searchable && !instance.disabled) {\n          deepExtend(props, {\n            attrs: {\n              tabIndex: instance.tabIndex,\n            },\n          })\n        }\n\n        return (\n          <div class=\"vue-treeselect__input-container\" {...props}>\n            {children}\n          </div>\n        )\n      },\n\n      renderInput() {\n        const { instance } = this\n\n        return (\n          <input ref=\"input\"\n            class=\"vue-treeselect__input\"\n            type=\"text\"\n            autocomplete=\"off\"\n            tabIndex={instance.tabIndex}\n            required={instance.required && !instance.hasValue}\n            value={this.value}\n            style={this.inputStyle}\n            onFocus={this.onFocus}\n            onInput={this.onInput}\n            onBlur={this.onBlur}\n            onKeydown={this.onKeyDown}\n            onMousedown={this.onMouseDown}\n          />\n        )\n      },\n\n      renderSizer() {\n        return (\n          <div ref=\"sizer\" class=\"vue-treeselect__sizer\">{this.value}</div>\n        )\n      },\n\n      updateInputWidth() {\n        this.inputWidth = Math.max(\n          MIN_INPUT_WIDTH,\n          this.$refs.sizer.scrollWidth + 15,\n        )\n      },\n\n      updateSearchQuery() {\n        const { instance } = this\n\n        instance.trigger.searchQuery = this.value\n      },\n    },\n\n    render() {\n      return this.renderInputContainer()\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./Input.vue?vue&type=script&lang=js\"\nexport * from \"./Input.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render, staticRenderFns\nimport script from \"./Placeholder.vue?vue&type=script&lang=js\"\nexport * from \"./Placeholder.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\n  export default {\n    name: 'vue-treeselect--placeholder',\n    inject: [ 'instance' ],\n\n    render() {\n      const { instance } = this\n      const placeholderClass = {\n        'vue-treeselect__placeholder': true,\n        'vue-treeselect-helper-zoom-effect-off': true,\n        'vue-treeselect-helper-hide': instance.hasValue || instance.trigger.searchQuery,\n      }\n\n      return (\n        <div class={placeholderClass}>\n          { instance.placeholder }\n        </div>\n      )\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./SingleValue.vue?vue&type=script&lang=js\"\nexport * from \"./SingleValue.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\n  import Input from './Input'\n  import Placeholder from './Placeholder'\n\n  export default {\n    name: 'vue-treeselect--single-value',\n    inject: [ 'instance' ],\n    methods: {\n      renderSingleValueLabel() {\n        const { instance } = this\n        const node = instance.selectedNodes[0]\n\n        const customValueLabelRenderer = instance.$scopedSlots['value-label']\n        return customValueLabelRenderer\n          ? customValueLabelRenderer({ node })\n          : node.label\n      },\n    },\n    render() {\n      const { instance, $parent: { renderValueContainer } } = this\n      const shouldShowValue = instance.hasValue && !instance.trigger.searchQuery\n\n      return renderValueContainer([\n        shouldShowValue && (\n          <div class=\"vue-treeselect__single-value\">\n            { this.renderSingleValueLabel() }\n          </div>\n        ),\n        <Placeholder />,\n        <Input ref=\"input\" />,\n      ])\n    },\n  }\n</script>\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"svg\",\n    {\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 348.333 348.333\",\n      },\n    },\n    [\n      _c(\"path\", {\n        attrs: {\n          d: \"M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z\",\n        },\n      }),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 348.333 348.333\">\n    <path d=\"M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z\" />\n  </svg>\n</template>\n\n<script>\n  export default {\n    name: 'vue-treeselect--x',\n  }\n</script>\n","import { render, staticRenderFns } from \"./Delete.vue?vue&type=template&id=364b6320\"\nimport script from \"./Delete.vue?vue&type=script&lang=js\"\nexport * from \"./Delete.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/tinhpt/code/oe/ownego/vue-treeselect/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('364b6320')) {\n      api.createRecord('364b6320', component.options)\n    } else {\n      api.reload('364b6320', component.options)\n    }\n    module.hot.accept(\"./Delete.vue?vue&type=template&id=364b6320\", function () {\n      api.rerender('364b6320', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/icons/Delete.vue\"\nexport default component.exports","var render, staticRenderFns\nimport script from \"./MultiValueItem.vue?vue&type=script&lang=js\"\nexport * from \"./MultiValueItem.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\n  import { onLeftClick } from '../utils'\n  import DeleteIcon from './icons/Delete'\n\n  export default {\n    name: 'vue-treeselect--multi-value-item',\n    inject: [ 'instance' ],\n\n    props: {\n      node: {\n        type: Object,\n        required: true,\n      },\n    },\n\n    methods: {\n      handleMouseDown: onLeftClick(function handleMouseDown() {\n        const { instance, node } = this\n\n        // Deselect this node.\n        instance.select(node)\n      }),\n    },\n\n    render() {\n      const { instance, node } = this\n      const itemClass = {\n        'vue-treeselect__multi-value-item': true,\n        'vue-treeselect__multi-value-item-disabled': node.isDisabled,\n        'vue-treeselect__multi-value-item-new': node.isNew,\n      }\n      const customValueLabelRenderer = instance.$scopedSlots['value-label']\n      const labelRenderer = customValueLabelRenderer ? customValueLabelRenderer({ node }) : node.label\n\n      return (\n        <div class=\"vue-treeselect__multi-value-item-container\">\n          <div class={itemClass} onMousedown={this.handleMouseDown}>\n            <span class=\"vue-treeselect__multi-value-label\">{ labelRenderer }</span>\n            <span class=\"vue-treeselect__icon vue-treeselect__value-remove\"><DeleteIcon /></span>\n          </div>\n        </div>\n      )\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./MultiValue.vue?vue&type=script&lang=js\"\nexport * from \"./MultiValue.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\n  import MultiValueItem from './MultiValueItem'\n  import Input from './Input'\n  import Placeholder from './Placeholder'\n\n  export default {\n    name: 'vue-treeselect--multi-value',\n    inject: [ 'instance' ],\n\n    methods: {\n      renderMultiValueItems() {\n        const { instance } = this\n\n        return instance.internalValue\n          .slice(0, instance.limit)\n          .map(instance.getNode)\n          .map(node => (\n            <MultiValueItem key={`multi-value-item-${node.id}`} node={node} />\n          ))\n      },\n\n      renderExceedLimitTip() {\n        const { instance } = this\n        const count = instance.internalValue.length - instance.limit\n\n        if (count <= 0) return null\n\n        return (\n          <div class=\"vue-treeselect__limit-tip vue-treeselect-helper-zoom-effect-off\" key=\"exceed-limit-tip\">\n            <span class=\"vue-treeselect__limit-tip-text\">{ instance.limitText(count) }</span>\n          </div>\n        )\n      },\n    },\n\n    render() {\n      const { renderValueContainer } = this.$parent\n      const transitionGroupProps = {\n        props: {\n          tag: 'div',\n          name: 'vue-treeselect__multi-value-item--transition',\n          appear: true,\n        },\n      }\n\n      return renderValueContainer(\n        <transition-group class=\"vue-treeselect__multi-value\" {...transitionGroupProps}>\n          {this.renderMultiValueItems()}\n          {this.renderExceedLimitTip()}\n          <Placeholder key=\"placeholder\" />\n          <Input ref=\"input\" key=\"input\" />\n        </transition-group>,\n      )\n    },\n  }\n</script>\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"svg\",\n    {\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 292.362 292.362\",\n      },\n    },\n    [\n      _c(\"path\", {\n        attrs: {\n          d: \"M286.935 69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952 0-9.233 1.807-12.85 5.424C1.807 72.998 0 77.279 0 82.228c0 4.948 1.807 9.229 5.424 12.847l127.907 127.907c3.621 3.617 7.902 5.428 12.85 5.428s9.233-1.811 12.847-5.428L286.935 95.074c3.613-3.617 5.427-7.898 5.427-12.847 0-4.948-1.814-9.229-5.427-12.85z\",\n        },\n      }),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 292.362 292.362\">\n    <path d=\"M286.935 69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952 0-9.233 1.807-12.85 5.424C1.807 72.998 0 77.279 0 82.228c0 4.948 1.807 9.229 5.424 12.847l127.907 127.907c3.621 3.617 7.902 5.428 12.85 5.428s9.233-1.811 12.847-5.428L286.935 95.074c3.613-3.617 5.427-7.898 5.427-12.847 0-4.948-1.814-9.229-5.427-12.85z\" />\n  </svg>\n</template>\n\n<script>\n  export default {\n    name: 'vue-treeselect--arrow',\n  }\n</script>\n","import { render, staticRenderFns } from \"./Arrow.vue?vue&type=template&id=11186cd4\"\nimport script from \"./Arrow.vue?vue&type=script&lang=js\"\nexport * from \"./Arrow.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/tinhpt/code/oe/ownego/vue-treeselect/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('11186cd4')) {\n      api.createRecord('11186cd4', component.options)\n    } else {\n      api.reload('11186cd4', component.options)\n    }\n    module.hot.accept(\"./Arrow.vue?vue&type=template&id=11186cd4\", function () {\n      api.rerender('11186cd4', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/icons/Arrow.vue\"\nexport default component.exports","<script>\n  import { UNCHECKED, INDETERMINATE, CHECKED } from '../constants'\n  import { onLeftClick } from '../utils'\n  import Tip from './Tip'\n  import ArrowIcon from './icons/Arrow'\n\n  let arrowPlaceholder, checkMark, minusMark\n\n  const Option = {\n    name: 'vue-treeselect--option',\n    inject: [ 'instance' ],\n\n    props: {\n      node: {\n        type: Object,\n        required: true,\n      },\n    },\n\n    computed: {\n      shouldExpand() {\n        const { instance, node } = this\n\n        return node.isBranch && instance.shouldExpand(node)\n      },\n\n      shouldShow() {\n        const { instance, node } = this\n\n        return instance.shouldShowOptionInMenu(node)\n      },\n    },\n\n    methods: {\n      renderOption() {\n        const { instance, node } = this\n        const optionClass = {\n          'vue-treeselect__option': true,\n          'vue-treeselect__option--disabled': node.isDisabled,\n          'vue-treeselect__option--selected': instance.isSelected(node),\n          'vue-treeselect__option--highlight': node.isHighlighted,\n          'vue-treeselect__option--matched': instance.localSearch.active && node.isMatched,\n          'vue-treeselect__option--hide': !this.shouldShow,\n        }\n\n        return (\n          <div class={optionClass} onMouseenter={this.handleMouseEnterOption} data-id={node.id}>\n            {this.renderArrow()}\n            {this.renderLabelContainer([\n              this.renderCheckboxContainer([\n                this.renderCheckbox(),\n              ]),\n              this.renderLabel(),\n            ])}\n          </div>\n        )\n      },\n\n      renderSubOptionsList() {\n        if (!this.shouldExpand) return null\n\n        return (\n          <div class=\"vue-treeselect__list\">\n            {this.renderSubOptions()}\n            {this.renderNoChildrenTip()}\n            {this.renderLoadingChildrenTip()}\n            {this.renderLoadingChildrenErrorTip()}\n          </div>\n        )\n      },\n\n      renderArrow() {\n        const { instance, node } = this\n\n        if (instance.shouldFlattenOptions && this.shouldShow) return null\n\n        if (node.isBranch) {\n          const transitionProps = {\n            props: {\n              name: 'vue-treeselect__option-arrow--prepare',\n              appear: true,\n            },\n          }\n          const arrowClass = {\n            'vue-treeselect__option-arrow': true,\n            'vue-treeselect__option-arrow--rotated': this.shouldExpand,\n          }\n\n          return (\n            <div class=\"vue-treeselect__option-arrow-container\" onMousedown={this.handleMouseDownOnArrow}>\n              <transition {...transitionProps}>\n                <ArrowIcon class={arrowClass} />\n              </transition>\n            </div>\n          )\n        }\n\n        // For leaf nodes, we render a placeholder to keep its label aligned to\n        // branch nodes. Unless there is no branch nodes at all (a normal\n        // non-tree select).\n        if (/*node.isLeaf && */instance.hasBranchNodes) {\n          if (!arrowPlaceholder) arrowPlaceholder = (\n            <div class=\"vue-treeselect__option-arrow-placeholder\">&nbsp;</div>\n          )\n\n          return arrowPlaceholder\n        }\n\n        return null\n      },\n\n      renderLabelContainer(children) {\n        return (\n          <div class=\"vue-treeselect__label-container\" onMousedown={this.handleMouseDownOnLabelContainer}>\n            {children}\n          </div>\n        )\n      },\n\n      renderCheckboxContainer(children) {\n        const { instance, node } = this\n\n        if (instance.single) return null\n        if (instance.disableBranchNodes && node.isBranch) return null\n\n        return (\n          <div class=\"vue-treeselect__checkbox-container\">\n            {children}\n          </div>\n        )\n      },\n\n      renderCheckbox() {\n        const { instance, node } = this\n        const checkedState = instance.forest.checkedStateMap[node.id]\n        const checkboxClass = {\n          'vue-treeselect__checkbox': true,\n          'vue-treeselect__checkbox--checked': checkedState === CHECKED,\n          'vue-treeselect__checkbox--indeterminate': checkedState === INDETERMINATE,\n          'vue-treeselect__checkbox--unchecked': checkedState === UNCHECKED,\n          'vue-treeselect__checkbox--disabled': node.isDisabled,\n        }\n\n        if (!checkMark) checkMark = (\n          <span class=\"vue-treeselect__check-mark\" />\n        )\n        if (!minusMark) minusMark = (\n          <span class=\"vue-treeselect__minus-mark\" />\n        )\n\n        return (\n          <span class={checkboxClass}>\n            {checkMark}\n            {minusMark}\n          </span>\n        )\n      },\n\n      renderLabel() {\n        const { instance, node } = this\n        const shouldShowCount = (\n          node.isBranch && (instance.localSearch.active\n            ? instance.showCountOnSearchComputed\n            : instance.showCount\n          )\n        )\n        const count = shouldShowCount\n          ? instance.localSearch.active\n            ? instance.localSearch.countMap[node.id][instance.showCountOf]\n            : node.count[instance.showCountOf]\n          : NaN\n        const labelClassName = 'vue-treeselect__label'\n        const countClassName = 'vue-treeselect__count'\n        const customLabelRenderer = instance.$scopedSlots['option-label']\n\n        if (customLabelRenderer) return customLabelRenderer({\n          node,\n          shouldShowCount,\n          count,\n          labelClassName,\n          countClassName,\n        })\n\n        return (\n          <label class={labelClassName}>\n            {node.label}\n            {shouldShowCount && (\n              <span class={countClassName}>({count})</span>\n            )}\n          </label>\n        )\n      },\n\n      renderSubOptions() {\n        const { node } = this\n\n        if (!node.childrenStates.isLoaded) return null\n\n        return node.children.map(childNode => (\n          <Option node={childNode} key={childNode.id} />\n        ))\n      },\n\n      renderNoChildrenTip() {\n        const { instance, node } = this\n\n        if (!node.childrenStates.isLoaded || node.children.length) return null\n\n        return (\n          <Tip type=\"no-children\" icon=\"warning\">{ instance.noChildrenText }</Tip>\n        )\n      },\n\n      renderLoadingChildrenTip() {\n        const { instance, node } = this\n\n        if (!node.childrenStates.isLoading) return null\n\n        return (\n          <Tip type=\"loading\" icon=\"loader\">{ instance.loadingText }</Tip>\n        )\n      },\n\n      renderLoadingChildrenErrorTip() {\n        const { instance, node } = this\n\n        if (!node.childrenStates.loadingError) return null\n\n        return (\n          <Tip type=\"error\" icon=\"error\">\n            { node.childrenStates.loadingError }\n            <a class=\"vue-treeselect__retry\" title={instance.retryTitle} onMousedown={this.handleMouseDownOnRetry}>\n              { instance.retryText }\n            </a>\n          </Tip>\n        )\n      },\n\n      handleMouseEnterOption(evt) {\n        const { instance, node } = this\n\n        // Equivalent to `self` modifier.\n        // istanbul ignore next\n        if (evt.target !== evt.currentTarget) return\n\n        instance.setCurrentHighlightedOption(node, false)\n      },\n\n      handleMouseDownOnArrow: onLeftClick(function handleMouseDownOnOptionArrow() {\n        const { instance, node } = this\n\n        instance.toggleExpanded(node)\n      }),\n\n      handleMouseDownOnLabelContainer: onLeftClick(function handleMouseDownOnLabelContainer() {\n        const { instance, node } = this\n\n        if (node.isBranch && instance.disableBranchNodes) {\n          instance.toggleExpanded(node)\n        } else {\n          instance.select(node)\n        }\n      }),\n\n      handleMouseDownOnRetry: onLeftClick(function handleMouseDownOnRetry() {\n        const { instance, node } = this\n\n        instance.loadChildrenOptions(node)\n      }),\n    },\n\n    render() {\n      const { node } = this\n      const indentLevel = this.instance.shouldFlattenOptions ? 0 : node.level\n      const listItemClass = {\n        'vue-treeselect__list-item': true,\n        [`vue-treeselect__indent-level-${indentLevel}`]: true,\n      }\n      const transitionProps = {\n        props: {\n          name: 'vue-treeselect__list--transition',\n        },\n      }\n\n      return (\n        <div class={listItemClass}>\n          {this.renderOption()}\n          {node.isBranch && (\n            <transition {...transitionProps}>\n              {this.renderSubOptionsList()}\n            </transition>\n          )}\n        </div>\n      )\n    },\n  }\n\n  // eslint-disable-next-line vue/require-direct-export\n  export default Option\n</script>\n","var render, staticRenderFns\nimport script from \"./Control.vue?vue&type=script&lang=js\"\nexport * from \"./Control.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\n  import { onLeftClick, isPromise } from '../utils'\n  import SingleValue from './SingleValue'\n  import MultiValue from './MultiValue'\n  import DeleteIcon from './icons/Delete'\n  import ArrowIcon from './icons/Arrow'\n\n  export default {\n    name: 'vue-treeselect--control',\n    inject: [ 'instance' ],\n\n    computed: {\n      /* eslint-disable valid-jsdoc */\n      /**\n       * Should show the \"×\" button that resets value?\n       * @return {boolean}\n       */\n      shouldShowX() {\n        const { instance } = this\n\n        return (\n          instance.clearable &&\n          !instance.disabled &&\n          instance.hasValue &&\n          (this.hasUndisabledValue || instance.allowClearingDisabled)\n        )\n      },\n\n      /**\n       * Should show the arrow button that toggles menu?\n       * @return {boolean}\n       */\n      shouldShowArrow() {\n        const { instance } = this\n\n        if (!instance.alwaysOpen) return true\n        // Even with `alwaysOpen: true`, sometimes the menu is still closed,\n        // e.g. when the control is disabled.\n        return !instance.menu.isOpen\n      },\n\n      /**\n       * Has any undisabled option been selected?\n       * @type {boolean}\n       */\n      hasUndisabledValue() {\n        const { instance } = this\n\n        return (\n          instance.hasValue &&\n          instance.internalValue.some(id => !instance.getNode(id).isDisabled)\n        )\n      },\n      /* eslint-enable valid-jsdoc */\n    },\n\n    methods: {\n      renderX() {\n        const { instance } = this\n        const title = instance.multiple ? instance.clearAllText : instance.clearValueText\n\n        if (!this.shouldShowX) return null\n\n        return (\n          <div class=\"vue-treeselect__x-container\" title={title} onMousedown={this.handleMouseDownOnX}>\n            <DeleteIcon class=\"vue-treeselect__x\" />\n          </div>\n        )\n      },\n\n      renderArrow() {\n        const { instance } = this\n        const arrowClass = {\n          'vue-treeselect__control-arrow': true,\n          'vue-treeselect__control-arrow--rotated': instance.menu.isOpen,\n        }\n\n        if (!this.shouldShowArrow) return null\n\n        return (\n          <div class=\"vue-treeselect__control-arrow-container\" onMousedown={this.handleMouseDownOnArrow}>\n            <ArrowIcon class={arrowClass} />\n          </div>\n        )\n      },\n\n      handleMouseDownOnX: onLeftClick(function handleMouseDownOnX(evt) {\n        /**\n         * We don't use async/await here because we don't want\n         * to rely on Babel polyfill or regenerator runtime.\n         * See: https://babeljs.io/docs/plugins/transform-regenerator/\n         * We also don't want to assume there is a global `Promise`\n         * class, since we are targeting to support IE9 without the\n         * need of any polyfill.\n         */\n\n        evt.stopPropagation()\n        evt.preventDefault()\n\n        const { instance } = this\n        const result = instance.beforeClearAll()\n        const handler = shouldClear => {\n          if (shouldClear) instance.clear()\n        }\n\n        if (isPromise(result)) {\n          // The handler will be called async.\n          result.then(handler)\n        } else {\n          // Keep the same behavior here.\n          setTimeout(() => handler(result), 0)\n          // Also, note that IE9 requires:\n          //   setTimeout(() => fn(...args), delay)\n          // Instead of:\n          //   setTimeout(fn, delay, ...args)\n        }\n      }),\n\n      handleMouseDownOnArrow: onLeftClick(function handleMouseDownOnArrow(evt) {\n        evt.preventDefault()\n        evt.stopPropagation()\n\n        const { instance } = this\n\n        // Focus the input or prevent blurring.\n        instance.focusInput()\n        instance.toggleMenu()\n      }),\n\n      // This is meant to be called by child `<Value />` component.\n      renderValueContainer(children) {\n        return (\n          <div class=\"vue-treeselect__value-container\">\n            {children}\n          </div>\n        )\n      },\n    },\n\n    render() {\n      const { instance } = this\n      const ValueContainer = instance.single ? SingleValue : MultiValue\n\n      return (\n        <div class=\"vue-treeselect__control\" onMousedown={instance.handleMouseDown}>\n          <ValueContainer ref=\"value-container\" />\n          {this.renderX()}\n          {this.renderArrow()}\n        </div>\n      )\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./Tip.vue?vue&type=script&lang=js\"\nexport * from \"./Tip.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\n  export default {\n    name: 'vue-treeselect--tip',\n    functional: true,\n\n    props: {\n      type: {\n        type: String,\n        required: true,\n      },\n      icon: {\n        type: String,\n        required: true,\n      },\n    },\n\n    render(_, context) {\n      const { props, children } = context\n\n      return (\n        <div class={`vue-treeselect__tip vue-treeselect__${props.type}-tip`}>\n          <div class=\"vue-treeselect__icon-container\">\n            <span class={`vue-treeselect__icon-${props.icon}`} />\n          </div>\n          <span class={`vue-treeselect__tip-text vue-treeselect__${props.type}-tip-text`}>\n            {children}\n          </span>\n        </div>\n      )\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./Option.vue?vue&type=script&lang=js\"\nexport * from \"./Option.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\n  import { MENU_BUFFER } from '../constants'\n  import { watchSize, setupResizeAndScrollEventListeners } from '../utils'\n  import Option from './Option'\n  import Tip from './Tip'\n\n  const directionMap = {\n    top: 'top',\n    bottom: 'bottom',\n    above: 'top',\n    below: 'bottom',\n  }\n\n  export default {\n    name: 'vue-treeselect--menu',\n    inject: [ 'instance' ],\n\n    computed: {\n      menuStyle() {\n        const { instance } = this\n\n        return {\n          maxHeight: instance.maxHeight + 'px',\n        }\n      },\n\n      menuContainerStyle() {\n        const { instance } = this\n\n        return {\n          zIndex: instance.appendToBody ? null : instance.zIndex,\n        }\n      },\n    },\n\n    watch: {\n      'instance.menu.isOpen'(newValue) {\n        if (newValue) {\n          // In case `openMenu()` is just called and the menu is not rendered yet.\n          this.$nextTick(this.onMenuOpen)\n        } else {\n          this.onMenuClose()\n        }\n      },\n    },\n\n    created() {\n      this.menuSizeWatcher = null\n      this.menuResizeAndScrollEventListeners = null\n    },\n\n    mounted() {\n      const { instance } = this\n\n      if (instance.menu.isOpen) this.$nextTick(this.onMenuOpen)\n    },\n\n    destroyed() {\n      this.onMenuClose()\n    },\n\n    methods: {\n      renderMenu() {\n        const { instance } = this\n\n        if (!instance.menu.isOpen) return null\n\n        return (\n          <div ref=\"menu\" class=\"vue-treeselect__menu\" onMousedown={instance.handleMouseDown} style={this.menuStyle}>\n            {this.renderBeforeList()}\n            {instance.async\n              ? this.renderAsyncSearchMenuInner()\n              : instance.localSearch.active\n                ? this.renderLocalSearchMenuInner()\n                : this.renderNormalMenuInner()}\n            {this.renderAfterList()}\n          </div>\n        )\n      },\n\n      renderBeforeList() {\n        const { instance } = this\n        const beforeListRenderer = instance.$scopedSlots['before-list']\n\n        return beforeListRenderer\n          ? beforeListRenderer()\n          : null\n      },\n\n      renderAfterList() {\n        const { instance } = this\n        const afterListRenderer = instance.$scopedSlots['after-list']\n\n        return afterListRenderer\n          ? afterListRenderer()\n          : null\n      },\n\n      renderNormalMenuInner() {\n        const { instance } = this\n\n        if (instance.rootOptionsStates.isLoading) {\n          return this.renderLoadingOptionsTip()\n        } else if (instance.rootOptionsStates.loadingError) {\n          return this.renderLoadingRootOptionsErrorTip()\n        } else if (instance.rootOptionsStates.isLoaded && instance.forest.normalizedOptions.length === 0) {\n          return this.renderNoAvailableOptionsTip()\n        } else {\n          return this.renderOptionList()\n        }\n      },\n\n      renderLocalSearchMenuInner() {\n        const { instance } = this\n\n        if (instance.rootOptionsStates.isLoading) {\n          return this.renderLoadingOptionsTip()\n        } else if (instance.rootOptionsStates.loadingError) {\n          return this.renderLoadingRootOptionsErrorTip()\n        } else if (instance.rootOptionsStates.isLoaded && instance.forest.normalizedOptions.length === 0) {\n          return this.renderNoAvailableOptionsTip()\n        } else if (instance.localSearch.noResults) {\n          return this.renderNoResultsTip()\n        } else {\n          return this.renderOptionList()\n        }\n      },\n\n      renderAsyncSearchMenuInner() {\n        const { instance } = this\n        const entry = instance.getRemoteSearchEntry()\n        const shouldShowSearchPromptTip = instance.trigger.searchQuery === '' && !instance.defaultOptions\n        const shouldShowNoResultsTip = shouldShowSearchPromptTip\n          ? false\n          : entry.isLoaded && entry.options.length === 0\n\n        if (shouldShowSearchPromptTip) {\n          return this.renderSearchPromptTip()\n        } else if (entry.isLoading) {\n          return this.renderLoadingOptionsTip()\n        } else if (entry.loadingError) {\n          return this.renderAsyncSearchLoadingErrorTip()\n        } else if (shouldShowNoResultsTip) {\n          return this.renderNoResultsTip()\n        } else {\n          return this.renderOptionList()\n        }\n      },\n\n      renderOptionList() {\n        const { instance } = this\n\n        return (\n          <div class=\"vue-treeselect__list\">\n            {instance.forest.normalizedOptions.map(rootNode => (\n              <Option node={rootNode} key={rootNode.id} />\n            ))}\n          </div>\n        )\n      },\n\n      renderSearchPromptTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"search-prompt\" icon=\"warning\">{ instance.searchPromptText }</Tip>\n        )\n      },\n\n      renderLoadingOptionsTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"loading\" icon=\"loader\">{ instance.loadingText }</Tip>\n        )\n      },\n\n      renderLoadingRootOptionsErrorTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"error\" icon=\"error\">\n            { instance.rootOptionsStates.loadingError }\n            <a class=\"vue-treeselect__retry\" onClick={instance.loadRootOptions} title={instance.retryTitle}>\n              { instance.retryText }\n            </a>\n          </Tip>\n        )\n      },\n\n      renderAsyncSearchLoadingErrorTip() {\n        const { instance } = this\n        const entry = instance.getRemoteSearchEntry()\n\n        // TODO: retryTitle?\n\n        return (\n          <Tip type=\"error\" icon=\"error\">\n            { entry.loadingError }\n            <a class=\"vue-treeselect__retry\" onClick={instance.handleRemoteSearch} title={instance.retryTitle}>\n              { instance.retryText }\n            </a>\n          </Tip>\n        )\n      },\n\n      renderNoAvailableOptionsTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"no-options\" icon=\"warning\">{ instance.noOptionsText }</Tip>\n        )\n      },\n\n      renderNoResultsTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"no-results\" icon=\"warning\">{ instance.noResultsText }</Tip>\n        )\n      },\n\n      onMenuOpen() {\n        this.adjustMenuOpenDirection()\n        this.setupMenuSizeWatcher()\n        this.setupMenuResizeAndScrollEventListeners()\n      },\n\n      onMenuClose() {\n        this.removeMenuSizeWatcher()\n        this.removeMenuResizeAndScrollEventListeners()\n      },\n\n      adjustMenuOpenDirection() {\n        const { instance } = this\n        if (!instance.menu.isOpen) return\n\n        const $menu = instance.getMenu()\n        const $control = instance.getControl()\n        const menuRect = $menu.getBoundingClientRect()\n        const controlRect = $control.getBoundingClientRect()\n        const menuHeight = menuRect.height\n        const viewportHeight = window.innerHeight\n        const spaceAbove = controlRect.top\n        const spaceBelow = window.innerHeight - controlRect.bottom\n        const isControlInViewport = (\n          (controlRect.top >= 0 && controlRect.top <= viewportHeight) ||\n          (controlRect.top < 0 && controlRect.bottom > 0)\n        )\n        const hasEnoughSpaceBelow = spaceBelow > menuHeight + MENU_BUFFER\n        const hasEnoughSpaceAbove = spaceAbove > menuHeight + MENU_BUFFER\n\n        if (!isControlInViewport) {\n          instance.closeMenu()\n        } else if (instance.openDirection !== 'auto') {\n          instance.menu.placement = directionMap[instance.openDirection]\n        } else if (hasEnoughSpaceBelow || !hasEnoughSpaceAbove) {\n          instance.menu.placement = 'bottom'\n        } else {\n          instance.menu.placement = 'top'\n        }\n      },\n\n      setupMenuSizeWatcher() {\n        const { instance } = this\n        const $menu = instance.getMenu()\n\n        // istanbul ignore next\n        if (this.menuSizeWatcher) return\n\n        this.menuSizeWatcher = {\n          remove: watchSize($menu, this.adjustMenuOpenDirection),\n        }\n      },\n\n      setupMenuResizeAndScrollEventListeners() {\n        const { instance } = this\n        const $control = instance.getControl()\n\n        // istanbul ignore next\n        if (this.menuResizeAndScrollEventListeners) return\n\n        this.menuResizeAndScrollEventListeners = {\n          remove: setupResizeAndScrollEventListeners($control, this.adjustMenuOpenDirection),\n        }\n      },\n\n      removeMenuSizeWatcher() {\n        if (!this.menuSizeWatcher) return\n\n        this.menuSizeWatcher.remove()\n        this.menuSizeWatcher = null\n      },\n\n      removeMenuResizeAndScrollEventListeners() {\n        if (!this.menuResizeAndScrollEventListeners) return\n\n        this.menuResizeAndScrollEventListeners.remove()\n        this.menuResizeAndScrollEventListeners = null\n      },\n    },\n\n    render() {\n      return (\n        <div ref=\"menu-container\" class=\"vue-treeselect__menu-container\" style={this.menuContainerStyle}>\n          <transition name=\"vue-treeselect__menu--transition\">\n            {this.renderMenu()}\n          </transition>\n        </div>\n      )\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./Menu.vue?vue&type=script&lang=js\"\nexport * from \"./Menu.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\n  import Vue from 'vue'\n  import { watchSize, setupResizeAndScrollEventListeners, find } from '../utils'\n  import Menu from './Menu'\n\n  const PortalTarget = {\n    name: 'vue-treeselect--portal-target',\n    inject: [ 'instance' ],\n\n    watch: {\n      'instance.menu.isOpen'(newValue) {\n        if (newValue) {\n          this.setupHandlers()\n        } else {\n          this.removeHandlers()\n        }\n      },\n\n      'instance.menu.placement'() {\n        this.updateMenuContainerOffset()\n      },\n    },\n\n    created() {\n      this.controlResizeAndScrollEventListeners = null\n      this.controlSizeWatcher = null\n    },\n\n    mounted() {\n      const { instance } = this\n\n      if (instance.menu.isOpen) this.setupHandlers()\n    },\n\n    methods: {\n      setupHandlers() {\n        this.updateWidth()\n        this.updateMenuContainerOffset()\n        this.setupControlResizeAndScrollEventListeners()\n        this.setupControlSizeWatcher()\n      },\n\n      removeHandlers() {\n        this.removeControlResizeAndScrollEventListeners()\n        this.removeControlSizeWatcher()\n      },\n\n      setupControlResizeAndScrollEventListeners() {\n        const { instance } = this\n        const $control = instance.getControl()\n\n        // istanbul ignore next\n        if (this.controlResizeAndScrollEventListeners) return\n\n        this.controlResizeAndScrollEventListeners = {\n          remove: setupResizeAndScrollEventListeners($control, this.updateMenuContainerOffset),\n        }\n      },\n\n      setupControlSizeWatcher() {\n        const { instance } = this\n        const $control = instance.getControl()\n\n        // istanbul ignore next\n        if (this.controlSizeWatcher) return\n\n        this.controlSizeWatcher = {\n          remove: watchSize($control, () => {\n            this.updateWidth()\n            this.updateMenuContainerOffset()\n          }),\n        }\n      },\n\n      removeControlResizeAndScrollEventListeners() {\n        if (!this.controlResizeAndScrollEventListeners) return\n\n        this.controlResizeAndScrollEventListeners.remove()\n        this.controlResizeAndScrollEventListeners = null\n      },\n\n      removeControlSizeWatcher() {\n        if (!this.controlSizeWatcher) return\n\n        this.controlSizeWatcher.remove()\n        this.controlSizeWatcher = null\n      },\n\n      updateWidth() {\n        const { instance } = this\n        const $portalTarget = this.$el\n        const $control = instance.getControl()\n        const controlRect = $control.getBoundingClientRect()\n\n        $portalTarget.style.width = controlRect.width + 'px'\n      },\n\n      updateMenuContainerOffset() {\n        const { instance } = this\n        const $control = instance.getControl()\n        const $portalTarget = this.$el\n        const controlRect = $control.getBoundingClientRect()\n        const portalTargetRect = $portalTarget.getBoundingClientRect()\n        const offsetY = instance.menu.placement === 'bottom' ? controlRect.height : 0\n        const left = Math.round(controlRect.left - portalTargetRect.left) + 'px'\n        const top = Math.round(controlRect.top - portalTargetRect.top + offsetY) + 'px'\n        const menuContainerStyle = this.$refs.menu.$refs['menu-container'].style\n        const transformVariations = [ 'transform', 'webkitTransform', 'MozTransform', 'msTransform' ]\n        const transform = find(transformVariations, t => t in document.body.style)\n\n        // IE9 doesn't support `translate3d()`.\n        menuContainerStyle[transform] = `translate(${left}, ${top})`\n      },\n    },\n\n    render() {\n      const { instance } = this\n      const portalTargetClass = [ 'vue-treeselect__portal-target', instance.wrapperClass ]\n      const portalTargetStyle = { zIndex: instance.zIndex }\n\n      return (\n        <div class={portalTargetClass} style={portalTargetStyle} data-instance-id={instance.getInstanceId()}>\n          <Menu ref=\"menu\" />\n        </div>\n      )\n    },\n\n    destroyed() {\n      this.removeHandlers()\n    },\n  }\n\n  let placeholder\n\n  export default {\n    name: 'vue-treeselect--menu-portal',\n\n    created() {\n      this.portalTarget = null\n    },\n\n    mounted() {\n      this.setup()\n    },\n\n    destroyed() {\n      this.teardown()\n    },\n\n    methods: {\n      setup() {\n        const el = document.createElement('div')\n        document.body.appendChild(el)\n\n        this.portalTarget = new Vue({\n          el,\n          parent: this,\n          ...PortalTarget,\n        })\n      },\n\n      teardown() {\n        document.body.removeChild(this.portalTarget.$el)\n        this.portalTarget.$el.innerHTML = ''\n\n        this.portalTarget.$destroy()\n        this.portalTarget = null\n      },\n    },\n\n    render() {\n      if (!placeholder) placeholder = (\n        <div class=\"vue-treeselect__menu-placeholder\" />\n      )\n\n      return placeholder\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./MenuPortal.vue?vue&type=script&lang=js\"\nexport * from \"./MenuPortal.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render, staticRenderFns\nimport script from \"./Treeselect.vue?vue&type=script&lang=js\"\nexport * from \"./Treeselect.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\n  import treeselectMixin from '../mixins/treeselectMixin'\n  import HiddenFields from './HiddenFields'\n  import Control from './Control'\n  import Menu from './Menu'\n  import MenuPortal from './MenuPortal'\n\n  export default {\n    name: 'vue-treeselect',\n    mixins: [ treeselectMixin ],\n\n    computed: {\n      wrapperClass() {\n        return {\n          'vue-treeselect': true,\n          'vue-treeselect--single': this.single,\n          'vue-treeselect--multi': this.multiple,\n          'vue-treeselect--searchable': this.searchable,\n          'vue-treeselect--disabled': this.disabled,\n          'vue-treeselect--focused': this.trigger.isFocused,\n          'vue-treeselect--has-value': this.hasValue,\n          'vue-treeselect--open': this.menu.isOpen,\n          'vue-treeselect--open-above': this.menu.placement === 'top',\n          'vue-treeselect--open-below': this.menu.placement === 'bottom',\n          'vue-treeselect--branch-nodes-disabled': this.disableBranchNodes,\n          'vue-treeselect--append-to-body': this.appendToBody,\n        }\n      },\n    },\n\n    render() {\n      return (\n        <div ref=\"wrapper\" class={this.wrapperClass}>\n          <HiddenFields />\n          <Control ref=\"control\" />\n          {this.appendToBody ? <MenuPortal ref=\"portal\" /> : <Menu ref=\"menu\" />}\n        </div>\n      )\n    },\n  }\n</script>\n","import Treeselect from './components/Treeselect'\nimport treeselectMixin from './mixins/treeselectMixin'\nimport './style.less'\n\nexport default Treeselect\nexport { Treeselect, treeselectMixin }\nexport {\n  // Delayed loading.\n  LOAD_ROOT_OPTIONS,\n  LOAD_CHILDREN_OPTIONS,\n  ASYNC_SEARCH,\n} from './constants'\n\nexport const VERSION = PKG_VERSION\n"],"sourceRoot":""}